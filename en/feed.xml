<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:base="https://nnb.codeberg.page/blog">
  <title>NNBlog</title>
  <subtitle>Blog that SuperB</subtitle>
  <link href="https://nnb.codeberg.page/blog/en/feed.xml" rel="self"/>
  <link href="https://nnb.codeberg.page/blog"/>
  <updated>2024-02-08T00:00:00Z</updated>
  <id>https://nnb.codeberg.page/blog</id>
  <author>
    <name>NNB</name>
    <email>nnbnh@protonmail.com</email>
  </author>
  <entry>
    <title>Debunking allegations about Flappy Bird</title>
    <link href="https://nnb.codeberg.page/blog/en/posts/16/"/>
    <updated>2024-02-08T00:00:00Z</updated>
    <id>https://nnb.codeberg.page/blog/en/posts/16/</id>
    <content xml:lang="en" type="html">&lt;p&gt;A decade ago, at the end of 2013, the world witnessed the rise of Flappy Bird - a mobile game with simple design yet a high skill ceiling, piquing the desire to overcome challenges in many players. Thanks to that, Flappy Bird became a worldwide phenomenon and trend at the start of 2014. However, not long after, on the same date as today (February 8th) 10 years ago, Nguyen Ha Dong - the father of Flappy Bird - couldn&#39;t handle the overwhelming negative public opinion anymore, and took the billion-dollar game off all app stores.&lt;/p&gt;
&lt;p&gt;This historic event, despite happening 10 years ago, still left many suspicions and misunderstandings in many people&#39;s memories. Today, I want to deny some false allegations that were made towards Flappy Bird.&lt;/p&gt;
&lt;p&gt;Before that, I want to thank SoullessPuppet for helping me check and translate this entire article into English. Thank you and happy holiday!&lt;/p&gt;
&lt;h2 id=&quot;disclaimer&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#disclaimer&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Disclaimer&lt;/h2&gt;
&lt;p&gt;No one is completely free of bias, nor perfectly neutral. I, myself, am a Vietnamese, and also an aspiring game developer, so I have a lot of sympathy towards Mr. Dong. I just want to clarify that, although I try to be as fair as possible, I still have a bias towards Flappy Bird. But the points I will make do come with evidence.&lt;/p&gt;
&lt;p&gt;PLEASE DO NOT HARASS ANY INDIVIDUAL OR ORGANIZATION MENTIONED IN THIS POST !!!!!&lt;/p&gt;
&lt;p&gt;I know there will inevitably be some readers who feel the need to punish those who victimized Mr. Dong. But I&#39;m asking every reader not to do so. Harassment is the same thing the media and internet did to the man, and we should not stoop so low. Moreover, it has been 10 years, so we should let the past stay in the past. Those who made mistakes 10 years ago are likely very different people today.&lt;/p&gt;
&lt;h2 id=&quot;allegation-1-used-bots&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#allegation-1-used-bots&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Allegation 1: Used bots&lt;/h2&gt;
&lt;h3 id=&quot;smoke-and-mirrors&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#smoke-and-mirrors&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &amp;quot;Smoke &amp;amp; Mirrors&amp;quot;&lt;/h3&gt;
&lt;p&gt;Most news articles point to &lt;a href=&quot;https://web.archive.org/web/20140204181721/http://www.bluecloudsolutions.com/blog/flappy-birds-smoke-mirrors-scamming-app-store&quot;&gt;&amp;quot;Flappy Bird&#39;s Smoke &amp;amp; Mirrors - Is Something Fishy Going On?&amp;quot;&lt;/a&gt; (on Bluecloud) as the source when mentioning this allegation.&lt;/p&gt;
&lt;p&gt;The argument presented by the post is as follows: Games that DotGears released during mid 2013 all became popular during November of the same year - roughly the same time. Yet there were no cross-advertisements in the games, nor were there any marketing campaigns ran at the time.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Quoted from &lt;a href=&quot;https://www.thechocolatelabapps.com/how-to-make-flappy-bird&quot;&gt;An interview with Dong on Chocolate Lab Apps&lt;/a&gt;:&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Elaine:&lt;/strong&gt; Is your success due to organic downloads only, or did you use any other methods?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dong:&lt;/strong&gt; I didn’t use any promotion methods. All accounts on Twitter, Facebook and Instagram about Flappy Bird are not mine. The popularity could be my luck.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;These arguments may sound suspicious, but if DotGears used bots to inflate their numbers, then wouldn&#39;t it be super obvious? Apple would have intervened and deleted it from the platform. During the 2012-2013 period, botting was a prevalent issue on the App Store, and &lt;a href=&quot;https://www.pocketgamer.com/news/apple-offers-official-warning-to-app-store-manipulators&quot;&gt;Apple worked on resolving this problem&lt;/a&gt; to &lt;a href=&quot;https://www.pocketgamer.com/research/app-store-download-volumes-still-to-bounce-back-from-bot-farm-ban&quot;&gt;some success&lt;/a&gt;. Apple and Google would have taken some actions, if an extremely trendy game often accused of cheating was actually cheating.&lt;/p&gt;
&lt;p&gt;The official twitter account of the App Store even &lt;a href=&quot;https://twitter.com/AppStore/status/431537791642918912&quot;&gt;made a post about Flappy Bird&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We got to 99. What&#39;s your high score?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The &amp;quot;Smoke &amp;amp; Mirrors&amp;quot; article then provided some evidence to back up their argument: There were some suspicious reviews...:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Here’s another nice little tidbit. Read through the reviews. Check the word count. Do an analysis on how many times the word &amp;quot;glitch&amp;quot; &amp;quot;pipe&amp;quot; &amp;quot;addicting&amp;quot; are used relative to the review length. Also check how many negative reviews give 5 stars.&lt;/p&gt;
&lt;p&gt;Here’s a quick snapshot from a 3 minute scroll through Flappy Bird’s reviews.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://web.archive.org/web/20140204122641im_/http://www.bluecloudsolutions.com/wp-content/uploads/2014/01/reviews.jpg&quot; alt=&quot;The reviews&quot; /&gt;&lt;/p&gt;
&lt;p&gt;I don’t think there is any app on the app store that has this many consistently morbid reviews that use the same words over and over and are posted in such regularity.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;On the image provided by the article are 9 reviews. The term &amp;quot;addicting&amp;quot; appeared twice, &amp;quot;pipe&amp;quot; appeared once and &amp;quot;glitch&amp;quot; never appeared... All 9 reviews are very different and had no signs of being copy-pasted. I&#39;m not sure if the author is being ironic or not? These reviews are less like bots reviews and more like an example of &lt;a href=&quot;https://en.wikipedia.org/wiki/Groupthink&quot;&gt;groupthink&lt;/a&gt;, more specifically, a joke where everyone pretend they are a victim of this frustrating game. Almost everyone was in on the joke, except the author.&lt;/p&gt;
&lt;p&gt;In a data research, the author of &lt;a href=&quot;http://zachwill.com/flappy-bird&quot;&gt;&amp;quot;Flappy Bird by the Numbers&amp;quot; bởi Zachwill&lt;/a&gt; concluded:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I was originally planning to focus on the December/January Flappy Bird reviews — I thought it’d be fun to prove that they were most likely bots. After loading the reviews into &lt;a href=&quot;http://pandas.pydata.org/&quot;&gt;&lt;code&gt;pandas&lt;/code&gt;&lt;/a&gt; and playing around with the data, though, it became pretty clear those had little to nothing to do with the success of Flappy Bird.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;it-doesn-t-matter&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#it-doesn-t-matter&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &amp;quot;It doesn&#39;t matter&amp;quot;&lt;/h3&gt;
&lt;p&gt;In the article &lt;a href=&quot;https://www.newsweek.com/flappy-bird-cooking-its-itunes-rank-228016&quot;&gt;&amp;quot;Is Flappy Bird Cooking its iTunes Rank?&amp;quot;&lt;/a&gt; posted on February 4th on Newsweek, an article putting Flappy Bird&#39;s ranking into question, &lt;a href=&quot;https://twitter.com/joekloc/status/430755599437938688&quot;&gt;Reporter Joe Kloc asked Dong on Twitter about the legitimacy of Flappy Bird&#39;s download count&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Joe Kloc:&lt;/strong&gt; @dongatory Hello. I&#39;m a reporter at Newsweek. Is there an email address through would I could contact you directly about Flappy Bird?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dong:&lt;/strong&gt; @joekloc Hi Joe, I think press should give my game some peace. Its success is really overrate! I&#39;m sorry, I refuse to answer questions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Joe Kloc:&lt;/strong&gt; @dongatory I&#39;m just curious about the post going around saying the download stats are false. Can you definitively say they aren&#39;t?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dong:&lt;/strong&gt; @joekloc It doesn&#39;t matter. Don&#39;t you think? If I did fake it, should Apple let it live for months?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Joe Kloc:&lt;/strong&gt; @dongatory If it doesn&#39;t matter, did you?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Dong&#39;s line &amp;quot;It doesn&#39;t matter&amp;quot; implied that it didn&#39;t matter what his answer to the bots question was, because the press and the internet community are going to find a way to hate on him regardless. The question asked by the reporter was a &lt;a href=&quot;https://en.wikipedia.org/wiki/Double_bind&quot;&gt;double bind&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If he denied the allegations, people would say that he&#39;s a liar.&lt;/li&gt;
&lt;li&gt;If he didn&#39;t deny the allegations, that is the equivalent of pressing a self-destruct button.&lt;/li&gt;
&lt;li&gt;If he stayed silent or refused to answer, he would be seem cowardly and suspicious.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Despite having a solid argument: &amp;quot;If I did fake it, should Apple let it live for months?&amp;quot;, that argument could still be seen as the third case above.&lt;/p&gt;
&lt;h3 id=&quot;dark-pattern&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#dark-pattern&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &amp;quot;Dark Pattern&amp;quot;&lt;/h3&gt;
&lt;p&gt;When Flappy Bird became popular, many experts found it hard to explain what led to this success. An article named &lt;a href=&quot;https://www.businessinsider.in/a-dark-pattern-in-flappy-bird-reveals-how-apples-mysterious-app-store-ranking-algorithm-works/articleshow/30292704.cms&quot;&gt;&amp;quot;A &#39;Dark Pattern&#39; In Flappy Bird Reveals How Apple&#39;s Mysterious App Store Ranking Algorithm Works&amp;quot;&lt;/a&gt; on Business Insider proposed a theory that Flappy Bird used &amp;quot;Dark Pattern&amp;quot; (a clever design to trick users into doing something):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In earlier versions of the game, there was a &amp;quot;rate&amp;quot; button at the end of each play session, and this button was placed in the same location that the player would tap to play. As a result, when the user wanted to continue playing, it was easy to hit the rate button instead.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Below is a photo taken from a &lt;a href=&quot;https://youtu.be/fQoJZuBwrkU&quot;&gt;video on IGN&#39;s Youtube channel demonstrating an older version of Flappy Bird on IOS&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;flex w-full gap-4 md:gap-8&quot;&gt;
  &lt;figure class=&quot;flex-1&quot;&gt;
    &lt;img class=&quot;w-full&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/ios_title_screen.png&quot; alt=&quot;IOS Title screen&quot; /&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;Title screen&lt;/figcaption&gt;
  &lt;/figure&gt;
  &lt;figure class=&quot;flex-1&quot;&gt;
    &lt;img class=&quot;w-full&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/ios_game_over.png&quot; alt=&quot;IOS Game over&quot; /&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;Game over&lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;And below are the same screens in later updates:&lt;/p&gt;
&lt;div class=&quot;flex w-full gap-4 md:gap-8&quot;&gt;
  &lt;figure class=&quot;flex-1&quot;&gt;
    &lt;img class=&quot;w-full&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/android_title_screen.png&quot; alt=&quot;Android Title screen&quot; /&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;Title screen&lt;/figcaption&gt;
  &lt;/figure&gt;
  &lt;figure class=&quot;flex-1&quot;&gt;
    &lt;img class=&quot;w-full&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/android_game_over.png&quot; alt=&quot;Android Game over&quot; /&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;Game over&lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;On both screens, the Play button was consistently on the left, and the Rate button isn&#39;t even on the Game Over screen. Tricks such as using colors to draw attention, or swapping placement of buttons are nowhere to be found.&lt;/p&gt;
&lt;p&gt;If you think it&#39;s suspiciously not user-friendly to put the Play button on the left side, and that this was done in hopes of getting people to click on the Share button, then here are some counter-arguments:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Around 10% of the world&#39;s population are left-handed.&lt;/li&gt;
&lt;li&gt;Most languages are read from left to right, so placing the Play button on the left makes players see it first.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;allegation-2-isn-t-a-good-game&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#allegation-2-isn-t-a-good-game&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Allegation 2: Isn&#39;t a good game&lt;/h2&gt;
&lt;h3 id=&quot;empty-design&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#empty-design&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Empty design&lt;/h3&gt;
&lt;p&gt;When Flappy Bird became popular, many people deemed it to be too simple and hollow - there wasn&#39;t even any music, and sounds were minimal too. Therefore, it was undeserving of its popularity:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Quoted from &lt;a href=&quot;https://www.ibtimes.co.uk/six-ways-flappy-bird-pure-evil-1434949&quot;&gt;&amp;quot;Six Ways Flappy Bird is Actually Pure Evil&amp;quot;&lt;/a&gt;:&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Once you&#39;ve passed one gap in Flappy Bird, and scored one point, that&#39;s the game. There&#39;s nothing else to be gained from it.&lt;/p&gt;
&lt;p&gt;After that it is nothing but a repetition of that first successful act for as long as you can muster.&lt;/p&gt;
&lt;p&gt;There is no escalation, no alteration in the size or regularity of the gaps, and it offers no sense of fun either in its visuals or its sound design. Flappy Bird is a simple evil, like stubbing your toe, kneeling on a piece of Lego or a swift kick between the legs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The writer of this article used pretty strong language. Perhaps they were feeling extreme, or perhaps it&#39;s just an act to bring in more views.&lt;/p&gt;
&lt;p&gt;A critique of Flappy Bird often cited and praised was  &lt;a href=&quot;https://web.archive.org/web/20140205023947/https://www.theatlantic.com/technology/archive/2014/02/the-squalid-grace-of-flappy-bird/283526&quot;&gt;&amp;quot;The Squalid Grace of Flappy Bird&amp;quot;&lt;/a&gt; from The Atlantic. This article was passionate and detailed, though also a bit too lengthy. The author recognized Flappy Bird&#39;s design as simple - even simpler than Tetris or Go, but without the depth found in the latter two. They also deemed the game flow to be too static, lacking ups and downs.&lt;/p&gt;
&lt;p&gt;I can somewhat understand where the author was coming from, but I still disagree. For simple games like Flappy Bird, having depth is ideal, but a lack of fluctuation in flow is not always a downside. Because the design is as minimalistic as possible: no music, no special effects, and very little sound - the game easily puts the player into the state of flow (highly concentrated mentally, or &amp;quot;the zone&amp;quot;). The difficulty of the game works to its advantage: it forces players to focus harder on every action, which then leads to them entering &amp;quot;the zone&amp;quot;.&lt;/p&gt;
&lt;p&gt;Rather than comparing it to Tetris or Go, Flappy Bird should be compared to skipping rope or juggling in real life. These games are difficult at first, but once you get used to them, the difficulty starts to stem how long you can stay in the zone and not make mistakes. Judging from this point of view, Flappy Bird has an advantage over other, more complex endless runners like Jetpack Joyride.&lt;/p&gt;
&lt;p&gt;The legendary game developer Benett Foddy, creator of classic &amp;quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Getting_Over_It_with_Bennett_Foddy&quot;&gt;Getting Over It&lt;/a&gt;&amp;quot; even said:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.theguardian.com/technology/2014/feb/10/flappy-bird-is-dead-but-brilliant-mechanics-made-it-fly&quot;&gt;What makes Flappy Bird work particularly well is that it eliminates all extraneous complexity to focus on one very simple input mechanic.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;unrealistic-physics&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#unrealistic-physics&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Unrealistic physics&lt;/h3&gt;
&lt;p&gt;We all know Flappy Bird is a hard game, but many people think the game is hard because the game&#39;s physics are not realistic. This is both true and false, according to &lt;a href=&quot;https://fnoschese.wordpress.com/2014/01/30/flappy-bird-when-reality-seems-unrealistic&quot;&gt;a scientific article on Action-Reaction that delves into the physics of the game&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Is the physics in Flappy Bird realistic? Yes AND no.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;YES:&lt;/strong&gt; The gravitational pull is constant, producing a constant downward acceleration of 9.8 m/s/s (if we scale the bird to the size of a robin).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NO:&lt;/strong&gt; The impulse provided by each tap is variable in order to produce the same post-tap velocity. In real life, the impulse from each tap would be constant and produce the same change in velocity.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;But being realistic or not doesn&#39;t really matter much, because fun is always more important than realism. Why does Mario, a human, jump 3-4 times as high as their own height? Why do we have floating dirt blocks in Minecraft? It&#39;s all because that made those games more fun, and the player experience smoother.&lt;/p&gt;
&lt;h2 id=&quot;allegation-3-negative-impact-on-players&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#allegation-3-negative-impact-on-players&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Allegation 3: Negative impact on players&lt;/h2&gt;
&lt;p&gt;Around the start of 2014, Flappy Bird spread everywhere as &amp;quot;the simple game that was somehow addictive&amp;quot;. Of course, &lt;a href=&quot;https://www.buzzfeednews.com/article/alanwhite/11-people-whove-had-their-lives-ruined-by-flappy-bird&quot;&gt;most people only exaggerated it as a joke on social media&lt;/a&gt;. However, the press and media didn&#39;t get the joke, and presented this phenomenon in an absurd light, treating Flappy Bird as some kind of new addictive drug. Worse still, a few news publishers even accused the game of being intentionally designed to negatively impact players...&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Quoted from &lt;a href=&quot;https://www.esquire.com/lifestyle/cars/a27142/flappy-bird-addictive&quot;&gt;&amp;quot;Why Flappy Bird Was So Addictive&amp;quot;&lt;/a&gt; from Esquire:&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Flappy Bird has a relentlessly habit-forming quality that&#39;s hard to explain.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;There&#39;s got to be a psychological explanation for Flappy Bird&#39;s massive success.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;More than a few have tried to crack the code, &lt;a href=&quot;https://www.google.com/search?q=flappy%20bird%20%22just%20one%20more%22&quot;&gt;usually pointing to the just-one-more effect&lt;/a&gt; (it was even &lt;a href=&quot;http://web.archive.org/web/20240202155249/https://newtz.shop/products/just-one-more-game-flappy-bird&quot;&gt;printed on shirts!&lt;/a&gt;!). The just-one-more effect is when we tell ourselves &amp;quot;just one more bite/episode&amp;quot;, or in this case, &amp;quot;just one more round&amp;quot;. But when that round ends, you still want &amp;quot;just one more round&amp;quot;, and the cycle repeats itself... With Flappy Bird, this effect was more pronounced, since each round is only a few seconds, and the player can easily retry immediately. The player&#39;s flow doesn&#39;t even have to end before a new round starts. But claiming this to be intentionally designed to cause addiction is far-fetched.&lt;/p&gt;
&lt;p&gt;It is unfair to label a game as &amp;quot;intentionally creating addicts&amp;quot; just for its design of short rounds and simplicity. As mentioned above, Flappy Bird should be compared to skipping rope or juggling - the length of each round is short, and starting a new round is near instant. Would you say that those traditional games were also designed to be addictive?&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;https://www.forbes.com/sites/lananhnguyen/2014/02/11/exclusive-flappy-bird-creator-dong-nguyen-says-app-gone-forever-because-it-was-an-addictive-product&quot;&gt;an exclusive interview with Forbes&lt;/a&gt;, Nguyen Ha Dong said:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Flappy Bird was designed to play in a few minutes when you are relaxed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Mark Griffiths, Director of the International Gaming Research Unit and Professor of Gambling Studies at Nottingham Trent University wrote an article named &lt;a href=&quot;https://theconversation.com/flappy-bird-obsession-is-not-necessarily-an-addiction-22638&quot;&gt;&amp;quot;Flappy Bird obsession is not necessarily an addiction&amp;quot;&lt;/a&gt;, explaining that being attracted by Flappy Bird doesn&#39;t necessarily mean being so addicted it negatively impacts your life.&lt;/p&gt;
&lt;h3 id=&quot;fabricated-events&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#fabricated-events&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Fabricated events&lt;/h3&gt;
&lt;p&gt;During the Flappy Bird craze at the start of 2014, more than a few news sites saw this as an opportunity to publish articles with shocking and dishonest titles about it to generate views. For example, many English news sites published about a teen stabbing his brother to death because he played Flappy Bird too well. After some digging, I&#39;ve tracked the news back to the blog &lt;a href=&quot;https://en.wikipedia.org/wiki/Huzlers&quot;&gt;Huzlers&lt;/a&gt;, an obvious fake news site.&lt;/p&gt;
&lt;figure class=&quot;w-full&quot;&gt;
  &lt;img class=&quot;w-full&quot; src=&quot;https://web.archive.org/web/20240208080617im_/https://media-cdn-v2.laodong.vn/storage/newsportal/Uploaded/luuthienhuong/2014_02_08/game_GZAC.JPG?w=660&quot; alt=&quot;Huzlers&quot; /&gt;
  &lt;figcaption class=&quot;text-center&quot;&gt;Huzlers&#39;s article&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;This article was debunked by more trustworthy sources. A video by TheGamerFromMars: &lt;a href=&quot;https://youtu.be/ojtlZZJYigo&quot;&gt;&amp;quot;The Flappy Bird Murder - Internet Mysteries&amp;quot;&lt;/a&gt; debunked the article in great detail from an overview perspective.&lt;/p&gt;
&lt;h3 id=&quot;dong-s-reaction&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#dong-s-reaction&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Dong&#39;s reaction&lt;/h3&gt;
&lt;p&gt;Despite almost all stories of &amp;quot;Flappy Bird ruining someone&#39;s life&amp;quot; being fake or overexaggerated, Nguyen Ha Dong seems to have believed some of them. In the same &lt;a href=&quot;https://www.forbes.com/sites/lananhnguyen/2014/02/11/exclusive-flappy-bird-creator-dong-nguyen-says-app-gone-forever-because-it-was-an-addictive-product&quot;&gt;interview with Forbes&lt;/a&gt; as above, Dong said:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Flappy Bird was designed to play in a few minutes when you are relaxed, but it happened to become an addictive product. I think it has become a problem. To solve that problem, it&#39;s best to take down Flappy Bird.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Quoted from &lt;a href=&quot;https://www.rollingstone.com/culture/culture-news/the-flight-of-the-birdman-flappy-bird-creator-dong-nguyen-speaks-out-112457&quot;&gt;his interview with RollingStone&lt;/a&gt;, from the perspective of the reporter&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;He hands me his iPhone so that I can scroll through some messages he’s saved. One is from a woman chastising him for &amp;quot;distracting the children of the world.&amp;quot; Another laments that &amp;quot;13 kids at my school broke their phones because of your game, and they still play it cause it’s addicting like crack.&amp;quot; Nguyen tells me of e-mails from workers who had lost their jobs, a mother who had stopped talking to her kids. &amp;quot;At first I thought they were just joking,&amp;quot; he says, &amp;quot;but I realize they really hurt themselves.&amp;quot; Nguyen - who says he botched tests in high school because he was playing too much Counter-Strike - genuinely took them to heart.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;On Twitter, Nguyen Ha Dong had shown to be a bit gullible to overexaggeration jokes from the internet, advising players to take breaks and play Flappy Bird in a more healthy manner:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/currllzzz/status/428825193646006273&quot;&gt;&lt;strong&gt;Twitter User&lt;/strong&gt;: lol im never gonna get some sleep now with these games 😭&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/dongatory/status/428825578465021953&quot;&gt;&lt;strong&gt;Dong:&lt;/strong&gt; Have a good night :-) Give my games a break too.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Twitter User&lt;/strong&gt;: i have been flappy bird for 3 hours straight its the most addicting thing ever&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/dongatory/status/428404148166348800&quot;&gt;&lt;strong&gt;Dong:&lt;/strong&gt; That is too much. Please give yourself and the game a break :D&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Twitter User&lt;/strong&gt;: FLAPPY BIRD HAS RUINED MY LIFE! I&#39;VE BEEN PLAYING IT FOR 8 HOURS STRAIGHT AND I SWEAR MY AYS ARE BLEEDING&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/dongatory/status/427191004744003584&quot;&gt;&lt;strong&gt;Dong:&lt;/strong&gt; It&#39;s just a game. Take care of yourself first. I don&#39;t make game to ruin people lives.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;He often had to receive such messages, and they all added pressure to his psyche. Eventually, he couldn&#39;t take anymore. As we all know, Mr. Dong had removed Flappy Bird from all app stores, hoping to end the &amp;quot;addiction&amp;quot; of his game.&lt;/p&gt;
&lt;h2 id=&quot;allegation-4-violating-mario-s-copyright&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#allegation-4-violating-mario-s-copyright&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Allegation 4: Violating Mario&#39;s copyright&lt;/h2&gt;
&lt;p&gt;We have arrived at the important part. This allegation what motivated me to write this blog post. Most news sites cite Kotaku&#39;s article &lt;a href=&quot;https://kotaku.com/flappy-bird-is-making-50-000-a-day-off-ripped-art-1517498140&quot;&gt;&amp;quot;Flappy Bird Is Making $50,000 A Day Off Ripped Art&amp;quot;&lt;/a&gt; when making the copyright argument. Reading through the article, we can easily see how sensational the author is being:&lt;/p&gt;
&lt;p&gt;Firstly, the author mentioned how Nguyen Ha Dong made a lot of money from the game:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Flappy Bird has gotten so big that its creator, Dong Nguyen, told The Verge he&#39;s making $50,000 a day on ad revenue. $50,000 a day! That&#39;s $18 million a year, FYI.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is a manipulation tactic to create distance between the reader and the target that the article wants to criticize. By first mentioning how much income he was making, the readers would feel like Mr. Dong is nothing like them, and therefore would empathize with him less. Then the author added:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Most people acknowledge that it&#39;s a terrible game - which it is.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As elaborated in the Allegation 2 above, this is debatable. And at the end of the article, the author concluded:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Let this be a life lesson: if you want to make $50,000 a day, put ripped art in a terrible game.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;By doing so, the author seems to want to hammer in the fact that Dong is an unethical game designer who did not deserve his success. Overall, this article wants to cause anger. &lt;a href=&quot;https://www.technologyreview.com/2013/09/16/176450/most-influential-emotions-on-social-networks-revealed&quot;&gt;A research from MIT&lt;/a&gt; showed that posts that caused anger were 3 times as likely to be shared on social media compared to other emotions. I think it&#39;s safe to assume that the author was intentionally trying to achieve the same effect by presenting heavily biased claims.&lt;/p&gt;
&lt;p&gt;Now let&#39;s take a closer look at the arguments stated in the article. Most of them revolve around Mr. Dong stealing art and sound assets from Nintendo&#39;s Mario series.&lt;/p&gt;
&lt;h3 id=&quot;stealing-sound-effects&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#stealing-sound-effects&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Stealing sound effects&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Quoted from &lt;a href=&quot;https://kotaku.com/flappy-bird-is-making-50-000-a-day-off-ripped-art-1517498140&quot;&gt;the article from Kotaku&lt;/a&gt;:&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The twinkly sound effect when your bird flies between pipes is heavily inspired by Mario&#39;s coin-collecting chime, to the point where they sound nearly identical.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is the collecting coin sound effects throughout the history of Mario games:&lt;/p&gt;
&lt;iframe class=&quot;aspect-video w-full&quot; src=&quot;https://www.youtube-nocookie.com/embed/gdPFOF91xb0&quot; title=&quot;Super Mario Coin Sound Effect Evolution (1983-2020)&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;And this is Flappy Bird&#39;s:&lt;/p&gt;
&lt;iframe width=&quot;100%&quot; height=&quot;166&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; allow=&quot;autoplay&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/80713508&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;They are both chimes, but they are definitely not identical. Many platformer games like DuckTales or Shovel Knight use similar sound effects. For example, this sound plays when collecting rings in Sonic:&lt;/p&gt;
&lt;iframe class=&quot;aspect-video w-full&quot; src=&quot;https://www.youtube-nocookie.com/embed/n9GImjHkLmE&quot; title=&quot;Sonic Ring - Sound Effect (HD)&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;Sounds in Flappy Birds were not only not taken from Mario, but also had a different style. This becomes even clearer when we hear Dong&#39;s comment. A month before releasing Flappy Bird, Dong posted on Twitter:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/dongatory/status/322298468955734016&quot;&gt;&lt;strong&gt;Dong:&lt;/strong&gt; Having a lot of fun working to add SFX into games. There are surprisingly a lot of royalty-free SFX on various of websites.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/dongatory/status/322299140518338561&quot;&gt;&lt;strong&gt;Dong:&lt;/strong&gt; So my remaining tasks are pretty simple: Edit the sound a little bit using GarageBand and add them into the game.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is common practice for indie game developers who don&#39;t have enough resource to hire sound effect artists, and also what&#39;s recommended for most beginners. Mr. Dong also has a &lt;a href=&quot;https://soundcloud.com/dong-nguyen-ha&quot;&gt;Soundcloud account where he posts sound effects that he makes and uses&lt;/a&gt;, you should check it out!&lt;/p&gt;
&lt;h3 id=&quot;stealing-background&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#stealing-background&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Stealing background&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Quoted from &lt;a href=&quot;https://kotaku.com/flappy-bird-is-making-50-000-a-day-off-ripped-art-1517498140&quot;&gt;the article from Kotaku&lt;/a&gt;:&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The backgrounds also appear to be heavily inspired by Mario.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a href=&quot;https://www.spriters-resource.com/mobile/flappybird/sheet/59894&quot;&gt;
  &lt;figure&gt;
    &lt;div class=&quot;flex w-full gap-4 md:gap-8&quot;&gt;
      &lt;img class=&quot;m-0 flex-1&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/flappy_bird_background_day.png&quot; alt=&quot;Flappy Bird Background Day&quot; /&gt;
      &lt;img class=&quot;m-0 flex-1&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/flappy_bird_background_night.png&quot; alt=&quot;Flappy Bird Background Night&quot; /&gt;
    &lt;/div&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;Flappy Bird&#39;s Backgrounds&lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/a&gt;
&lt;p&gt;I also managed to find every background of &lt;a href=&quot;https://www.mariowiki.com/Big-City&quot;&gt;Big City&lt;/a&gt; in &amp;quot;Donkey Kong&amp;quot; (Game Boy) and &lt;a href=&quot;https://www.mariowiki.com/Mario_Toy_Company&quot;&gt;Mario Toy Company&lt;/a&gt; in &amp;quot;Mario vs. Donkey Kong&amp;quot;, both also rare appearances of modern cities in Mario:&lt;/p&gt;
&lt;a href=&quot;https://www.spriters-resource.com/game_boy_gbc/dk/sheet/30087&quot;&gt;
  &lt;figure&gt;
    &lt;img class=&quot;w-full&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/big_city.png&quot; alt=&quot;Big City Background&quot; /&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;Big City&lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/a&gt;
&lt;a href=&quot;https://www.spriters-resource.com/game_boy_advance/mariovsdk/sheet/146&quot;&gt;
  &lt;figure&gt;
    &lt;img class=&quot;w-full&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/mario_toy_company.png&quot; alt=&quot;Mario Toy Company Background&quot; /&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;Mario Toy Company&lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/a&gt;
&lt;p&gt;And they don&#39;t look similar to Flappy Bird&#39;s background at all. The only commonality is that they&#39;re both pixel art modern cities. That hardly counts as &amp;quot;heavily inspired&amp;quot;, because if so, then games like  &lt;a href=&quot;https://en.wikipedia.org/wiki/Mega_Man&quot;&gt;Mega Man&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Kero_Blaster&quot;&gt;Kero Blaster&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/River_City_Ransom&quot;&gt;River City Ransom&lt;/a&gt;, etc. would all be &amp;quot;heavily inspired by Mario&amp;quot;?&lt;/p&gt;
&lt;h3 id=&quot;green-pipes-and-faby&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#green-pipes-and-faby&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Green pipes and Faby&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Quoted from &lt;a href=&quot;https://kotaku.com/flappy-bird-is-making-50-000-a-day-off-ripped-art-1517498140&quot;&gt;the article from Kotaku&lt;/a&gt;:&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Look at the pipes, for example:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://web.archive.org/web/20140207080213im_/http://img.gawkerassets.com/img/19evahld5d6ydpng/ku-xlarge.png&quot; alt=&quot;Kotaku pipe Eg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;On the left is Flappy Bird; on the right is Super Mario World.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To reiterate, the only commonality between these images are that they are both green pipes. Flappy Bird did not steal from Mario. I even gathered images of pipes in almost all 2D pixel art Mario games for comparison:&lt;/p&gt;
&lt;div class=&quot;flex flex-col gap-4&quot; x-data=&quot;{
    flappy_bird_pipes: {
      &#39;Flappy Bird v1.0&#39;: &#39;59537.png&#39;,
      &#39;Flappy Bird v1.2&#39;: &#39;59894.png&#39;,
    },
    mario_pipes: {
      &#39;Mario Bros.&#39;: &#39;MB_Arcade_Warp_Pipe_Sprite.png&#39;,
      &#39;Mario Bros. (Atari 2600)&#39;: &#39;MB_Atari_2600_Warp_Pipe_Sprite.png&#39;,
      &#39;Mario Bros. (Atari 5200)&#39;: &#39;MB5200Pipe.png&#39;,
      &#39;Mario Bros. (Atari 7800)&#39;: &#39;MB7800Pipe.png&#39;,
      &#39;Mario Bros. (NES)&#39;: &#39;MarioBrosNESWarpPipe.png&#39;,
      &#39;Super Mario Bros.&#39;: &#39;Warp_Pipe_SMB.png&#39;,
      &#39;Super Mario Bros. Special&#39;: &#39;SMBS_Sharp_X1_Warp_Pipe.png&#39;,
      &#39;Super Mario Bros. 3&#39;: &#39;WarpPipeSMB3.png&#39;,
      &#39;Super Mario Bros. 3 (Mario Bros.)&#39;: &#39;MBSMB3_Warp_Pipe.png&#39;,
      &#39;Super Mario Land&#39;: &#39;SML_Warp_Pipe_Sprite.png&#39;,
      &#39;Super Mario World&#39;: &#39;Warp_Pipe_SMW.png&#39;,
      &#39;Super Mario Land 2: 6 Golden Coins&#39;: &#39;CHB123SML2Pipe2.png&#39;,
      &#39;Super Mario All-Stars&#39;: &#39;SMASSMB_Pipe.png&#39;,
      &#39;Super Mario All-Stars (Super Mario Bros. 3)&#39;: &#39;SMAS_SMB3_Warp_Pipe_sprite.png&#39;,
      &#39;Super Mario World 2: Yoshi&#92;&#39;s Island&#39;: &#39;SMW2_Warp_Pipe.png&#39;,
    },
    flappy_bird_pipe: &#39;Flappy Bird v1.0&#39;,
    mario_pipe: &#39;Super Mario World&#39;,
  }&quot;&gt;
  &lt;div class=&quot;flex w-full flex-col items-center justify-center gap-y-4 gap-x-8 overflow-hidden rounded-xl bg-base-300 p-4 sm:flex-row&quot;&gt;
    &lt;div class=&quot;diff aspect-square md:flex-1&quot;&gt;
      &lt;div class=&quot;diff-item-1&quot;&gt;
        &lt;img class=&quot;-translate-y-8 scale-90 bg-base-300&quot; :src=&quot;`https://codeberg.org/NNB/blog-images/raw/branch/main/16/pipe/${mario_pipes[mario_pipe]}`&quot; alt=&quot;Mario&#39;s Pipe&quot; style=&quot;
            image-rendering: pixelated;
            image-rendering: -moz-crisp-edges;
            image-rendering: crisp-edges;
          &quot; /&gt;
      &lt;/div&gt;
      &lt;div class=&quot;diff-item-2&quot;&gt;
        &lt;img class=&quot;-translate-y-8 scale-90 bg-base-300&quot; :src=&quot;`https://codeberg.org/NNB/blog-images/raw/branch/main/16/pipe/${flappy_bird_pipes[flappy_bird_pipe]}`&quot; alt=&quot;Flappy Bird&#39;s Pipe&quot; style=&quot;
            image-rendering: pixelated;
            image-rendering: -moz-crisp-edges;
            image-rendering: crisp-edges;
          &quot; /&gt;
      &lt;/div&gt;
      &lt;div class=&quot;diff-resizer&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;diff aspect-square md:flex-1&quot;&gt;
      &lt;div class=&quot;diff-item-1&quot;&gt;
        &lt;img class=&quot;-translate-y-8 rotate-90 scale-90 bg-base-300&quot; :src=&quot;`https://codeberg.org/NNB/blog-images/raw/branch/main/16/pipe/${mario_pipes[mario_pipe]}`&quot; alt=&quot;Mario&#39;s Pipe&quot; style=&quot;
            image-rendering: pixelated;
            image-rendering: -moz-crisp-edges;
            image-rendering: crisp-edges;
          &quot; /&gt;
      &lt;/div&gt;
      &lt;div class=&quot;diff-item-2&quot;&gt;
        &lt;img class=&quot;-translate-y-8 rotate-90 scale-90 bg-base-300&quot; :src=&quot;`https://codeberg.org/NNB/blog-images/raw/branch/main/16/pipe/${flappy_bird_pipes[flappy_bird_pipe]}`&quot; alt=&quot;Flappy Bird&#39;s Pipe&quot; style=&quot;
            image-rendering: pixelated;
            image-rendering: -moz-crisp-edges;
            image-rendering: crisp-edges;
          &quot; /&gt;
      &lt;/div&gt;
      &lt;div class=&quot;diff-resizer&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;flex flex-col gap-4 sm:flex-row&quot;&gt;
    &lt;select class=&quot;select-bordered select flex-1&quot; x-model=&quot;flappy_bird_pipe&quot;&gt;
      &lt;template x-for=&quot;(image, game) in flappy_bird_pipes&quot; :key=&quot;game&quot;&gt;
        &lt;option x-text=&quot;game&quot;&gt;&lt;/option&gt;
      &lt;/template&gt;
    &lt;/select&gt;
    &lt;select class=&quot;select-bordered select flex-1&quot; x-model=&quot;mario_pipe&quot;&gt;
      &lt;template x-for=&quot;(image, game) in mario_pipes&quot; :key=&quot;game&quot;&gt;
        &lt;option x-text=&quot;game&quot;&gt;&lt;/option&gt;
      &lt;/template&gt;
    &lt;/select&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;(You can choose other Mario games to compare.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Flappy Bird&#39;s pipe matched none of them. Next, we have the bird, Faby:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Quoted from &lt;a href=&quot;https://kotaku.com/flappy-bird-is-making-50-000-a-day-off-ripped-art-1517498140&quot;&gt;the article from Kotaku&lt;/a&gt;:&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What about the bird itself? While the eponymous Flappy Bird isn&#39;t a direct ripoff, it appears to be a cross between the Spike and Cheep Cheep enemies in Super Mario Bros. 3. See if you can spot the similarities:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://web.archive.org/web/20140207080214im_/http://img.gawkerassets.com/img/19evahlcyexmmpng/ku-xlarge.png&quot; alt=&quot;Kotaku bird Eg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;(Left: Flappy Bird. Right/Top: Spike. Right/Bottom: Cheep-Cheep.)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here, the author did admit that it wasn&#39;t &amp;quot;direct theft&amp;quot; so I won&#39;t be compiling similar assets from Mario.&lt;/p&gt;
&lt;h3 id=&quot;fair-use&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#fair-use&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Fair use&lt;/h3&gt;
&lt;p&gt;Flappy Bird haters (if they still exist) might be thinking: &amp;quot;Not stealing directly doesn&#39;t mean free of plagiarism, Dong admitted himself that he was inspired by Mario!&amp;quot;&lt;/p&gt;
&lt;p&gt;It is true that he took some inspiration from Mario.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The year before, he’d drawn a pixelated bird on his computer that riffed on Nintendo fish, called &lt;a href=&quot;https://www.mariowiki.com/Cheep_Cheep&quot;&gt;Cheep Cheeps&lt;/a&gt;. He drew green pipes - a homage to Super Mario Bros. - that the bird would have to navigate.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When the internet suspect him of copyright violation against Nintendo, he answered:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/dongatory/status/430415793352749056&quot;&gt;&lt;strong&gt;Dong:&lt;/strong&gt; I think I stole their games&#39; spirit but I didn&#39;t rip-off their work.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;He&#39;s right. Those who claim copyright infringement between Mario and Flappy Bird are ignoring &lt;a href=&quot;https://en.wikipedia.org/wiki/Fair_use&quot;&gt;Fair Use&lt;/a&gt;. Fair use allows the use of a copyrighted work or components of a copyrighted product for educational purposes or for evaluation purposes. Fair use also considers the quantity and quality of the work used to determine whether a product infringes the copyright of other products.&lt;/p&gt;
&lt;p&gt;This law exists to limit individuals and organizations that may use their monopoly to limit the development of science and art, and at the same time, allow others to be inspired, transform, and improve products that already exist. Let&#39;s compare Flappy Bird with Mario:&lt;/p&gt;
&lt;p&gt;Firsly, Faby. I won&#39;t be comparing it to &lt;a href=&quot;https://www.mariowiki.com/Spike&quot;&gt;Spike&lt;/a&gt; because honestly, the only thing they have in common are think beaks. Comparing it to &lt;a href=&quot;https://www.mariowiki.com/Cheep_Cheep&quot;&gt;Cheep-Cheep&lt;/a&gt;, here are some commonalities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Round shape.&lt;/li&gt;
&lt;li&gt;Big mouth.&lt;/li&gt;
&lt;li&gt;White wings.&lt;/li&gt;
&lt;li&gt;Large eyes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And for the differences:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Faby&lt;/th&gt;
&lt;th&gt;Cheep-Cheep&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Is a bird&lt;/td&gt;
&lt;td&gt;Is a fish&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Yellow body&lt;/td&gt;
&lt;td&gt;Red body with white belly&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Have no tail nor fins&lt;/td&gt;
&lt;td&gt;Have tail and fins&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;They are not only two entirely different species, but even the parts that they have in common have slight differences:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Faby&lt;/th&gt;
&lt;th&gt;Cheep-Cheep&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Thin, long beak&lt;/td&gt;
&lt;td&gt;Thick, round lips&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Small wings at low position&lt;/td&gt;
&lt;td&gt;Large fins at high position&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;The eye is 1/4th its size&lt;/td&gt;
&lt;td&gt;Smaller eyes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;It&#39;s not enough to compare only looks. They are also used for completely different purposes, and interact with the world differently:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Faby&lt;/th&gt;
&lt;th&gt;Cheep-Cheep&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Player-controlled character&lt;/td&gt;
&lt;td&gt;Hostile enemy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Flies infinitely in arcs&lt;/td&gt;
&lt;td&gt;Swim straight underwater or hop in and out of water&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;What about the green pipes? Well, you know, those actually exists in real life:&lt;/p&gt;
&lt;div class=&quot;grid gap-4 sm:grid-cols-2&quot;&gt;
  &lt;div class=&quot;aspect-video overflow-hidden sm:aspect-[4/3]&quot;&gt;&lt;img class=&quot;m-0 h-full w-full object-cover object-center&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/green_pipe_irl0.jpg&quot; alt=&quot;Green pipe IRL 1&quot; /&gt;&lt;/div&gt;
  &lt;div class=&quot;aspect-video overflow-hidden sm:aspect-[4/3]&quot;&gt;&lt;img class=&quot;m-0 h-full w-full object-cover object-center&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/green_pipe_irl1.jpg&quot; alt=&quot;Green pipe IRL 2&quot; /&gt;&lt;/div&gt;
  &lt;div class=&quot;aspect-video overflow-hidden sm:aspect-[4/3]&quot;&gt;&lt;img class=&quot;m-0 h-full w-full object-cover object-center&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/green_pipe_irl2.jpg&quot; alt=&quot;Green pipe IRL 3&quot; /&gt;&lt;/div&gt;
  &lt;div class=&quot;aspect-video overflow-hidden sm:aspect-[4/3]&quot;&gt;&lt;img class=&quot;m-0 h-full w-full object-cover object-center&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/green_pipe_irl3.jpg&quot; alt=&quot;Green pipe IRL 4&quot; /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Pipes that are big, bright green, and has thick edges like Mario exist in real life, not just a brainchild of Nintendo. But if you think about it, the concept of &amp;quot;green water pipes&amp;quot; is very general and has existed or been applied in many fields. It itself cannot be copyrighted by any individual or organization. But just to be sure, let&#39;s compare the pipes in Flappy Bird with Mario:&lt;/p&gt;
&lt;p&gt;| In Flappy Bird                   | In Mario                                                | &lt;!-- TODO --&gt;
| -------------------------------- | ------------------------------------------------------- |
| Player character dies on contact | Blocks the player&#39;s movement                            |
| Can&#39;t be interacted with         | Can sometimes go into and out of or warp between worlds |&lt;/p&gt;
&lt;p&gt;Once again, the way pipes are used is very different between the two games. So why did Mr. Dong use pipes like Mario and not something else like a brick wall or laser?&lt;/p&gt;
&lt;p&gt;No art exists in a vacuum, neither does Flappy Bird. Flappy Bird is a video game, video game is art, and art is a conversation. A conversation between artists, from generation to generation, to learn, cultivate, grow. Nguyen Ha Dong used the image of a green pipe like in Mario not to piggyback of Mario&#39;s popularity or because he was lazy to create another image. He uses it precisely because it is a symbol of video games in general in the childhood of his generation. He seems to want to give players a ticket back to childhood, taking them back to simpler times. Simple like the design of Flappy Bird it&#39;s self. Remember, simplicity is what he really aims for.&lt;/p&gt;
&lt;h3 id=&quot;nintendo-and-inspired-games&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#nintendo-and-inspired-games&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Nintendo and inspired games&lt;/h3&gt;
&lt;p&gt;There are many games on the market that are much more strongly inspired by Nintendo games than Flappy Bird, yet have not received much criticism, or are even praised for bringing back nostalgic memories. Classic examples include &lt;a href=&quot;https://en.wikipedia.org/wiki/Braid_(video_game)&quot;&gt;Braid&lt;/a&gt;, inspired by Mario &lt;a href=&quot;https://www.mariowiki.com/Super_Mario_Bros.&quot;&gt;Super Mario Bros&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;An enemy in Braid, &lt;a href=&quot;https://braid.fandom.com/wiki/Monstar&quot;&gt;Monstar&lt;/a&gt;, has almost identical sprite and behaviors to the &lt;a href=&quot;https://www.mariowiki.com/Goomba&quot;&gt;Goomba&lt;/a&gt; from Mario:&lt;/p&gt;
&lt;div class=&quot;grid grid-cols-2 gap-4&quot;&gt;
  &lt;figure&gt;
    &lt;div class=&quot;flex h-full items-center justify-center&quot;&gt;
      &lt;img class=&quot;m-0 h-full max-h-64 object-contain object-center&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/braid_monstar.webp&quot; alt=&quot;Monstar&quot; /&gt;
    &lt;/div&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;Monstar (Braid)&lt;/figcaption&gt;
  &lt;/figure&gt;
  &lt;figure&gt;
    &lt;div class=&quot;flex h-full items-center justify-center&quot;&gt;
      &lt;img class=&quot;m-0 h-full max-h-64 object-contain object-center&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/mario_goomba.svg&quot; alt=&quot;Goomba&quot; /&gt;
    &lt;/div&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;Goomba (Mario)&lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;The same is true with &lt;a href=&quot;https://braid.fandom.com/wiki/Claw&quot;&gt;Claw&lt;/a&gt; (Braid) and &lt;a href=&quot;https://www.mariowiki.com/Piranha_Plant&quot;&gt;Piranha Plant&lt;/a&gt; (Super Mario Bros):&lt;/p&gt;
&lt;div class=&quot;grid grid-cols-2 gap-4&quot;&gt;
  &lt;figure&gt;
    &lt;div class=&quot;flex h-full items-center justify-center&quot;&gt;
      &lt;img class=&quot;m-0 h-full max-h-64 object-contain object-center&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/braid_claw.webp&quot; alt=&quot;Claw&quot; /&gt;
    &lt;/div&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;Claw (Braid)&lt;/figcaption&gt;
  &lt;/figure&gt;
  &lt;figure&gt;
    &lt;div class=&quot;flex h-full items-center justify-center&quot;&gt;
      &lt;img class=&quot;m-0 h-full max-h-64 object-contain object-center sm:h-64&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/mario_piranha_plant.png&quot; alt=&quot;Piranha Plant&quot; style=&quot;
          image-rendering: pixelated;
          image-rendering: -moz-crisp-edges;
          image-rendering: crisp-edges;
        &quot; /&gt;
    &lt;/div&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;Piranha Plant (Mario)&lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;Level &lt;a href=&quot;https://braid.fandom.com/wiki/4-2:_Jumpman&quot;&gt;4-2&lt;/a&gt; in Braid is heavily inspired by the game &lt;a href=&quot;https://www.mariowiki.com/Donkey_Kong_(game)&quot;&gt;Donkey Kong&lt;/a&gt;, and the level&#39;s name is also &amp;quot;Jumpman&amp;quot; (nickname for Mario before Mario was renamed):&lt;/p&gt;
&lt;div class=&quot;grid grid-cols-2 gap-4&quot;&gt;
  &lt;figure&gt;
    &lt;div class=&quot;flex h-full items-center justify-center bg-black&quot;&gt;
      &lt;img class=&quot;m-0 h-full max-h-48 object-cover object-[40%_center] sm:max-h-96&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/braid_4_2.png&quot; alt=&quot;Braid 4-2&quot; /&gt;
    &lt;/div&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;4-2: Jumpman (Braid)&lt;/figcaption&gt;
  &lt;/figure&gt;
  &lt;figure&gt;
    &lt;div class=&quot;flex h-full items-center justify-center bg-black&quot;&gt;
      &lt;img class=&quot;m-0 h-full max-h-48 object-contain object-center sm:max-h-96&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/mario_donkey_kong.png&quot; alt=&quot;Donkey Kong&quot; style=&quot;
          image-rendering: pixelated;
          image-rendering: -moz-crisp-edges;
          image-rendering: crisp-edges;
        &quot; /&gt;
    &lt;/div&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;25m (Donkey Kong)&lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;At the end of each world in Braid, a character will appear to tell the player that &amp;quot;the princess is in another castle&amp;quot;, a reference to Mario:&lt;/p&gt;
&lt;div class=&quot;grid grid-cols-2 gap-4&quot;&gt;
  &lt;figure&gt;
    &lt;div class=&quot;flex h-full items-center justify-center bg-black&quot;&gt;
      &lt;img class=&quot;m-0 h-full max-h-48 object-cover object-center sm:max-h-96&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/braid_1_4.png&quot; alt=&quot;Braid 2-4&quot; /&gt;
    &lt;/div&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;End of level 2-4 (Braid)&lt;/figcaption&gt;
  &lt;/figure&gt;
  &lt;figure&gt;
    &lt;div class=&quot;flex h-full items-center justify-center bg-black&quot;&gt;
      &lt;img class=&quot;m-0 h-full max-h-48 object-contain object-center sm:max-h-96&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/mario_1_4.png&quot; alt=&quot;Super Mario Bros 1-4&quot; style=&quot;
          image-rendering: pixelated;
          image-rendering: -moz-crisp-edges;
          image-rendering: crisp-edges;
        &quot; /&gt;
    &lt;/div&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;End of level 1-4 (Super Mario Bros)&lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;Both games are even from the same genre (&lt;a href=&quot;https://en.wikipedia.org/wiki/Platformer&quot;&gt;Platformer&lt;/a&gt;). But Braid is absolutely not a copycat. This game focuses more on puzzle elements with time manipulation mechanics. It uses many images from Mario because it wants players to quickly understand the basic mechanics of the game, then focus on the puzzle element. Not only that, it also creates a feeling of nostalgia, fooling players into thinking that the game is just a simple, fun game, then twisting that expectation. I want to avoid spoilers so I won&#39;t go into more detail.&lt;/p&gt;
&lt;p&gt;Mario wasn&#39;t the only product that became inspiration. 2nd example: &lt;a href=&quot;https://en.wikipedia.org/wiki/Tunic_(video_game)&quot;&gt;TUNIC&lt;/a&gt; inspired by &lt;a href=&quot;https://zeldawiki.wiki/wiki/The_Legend_of_Zelda&quot;&gt;The Legend of Zelda&lt;/a&gt;, both are &lt;a href=&quot;https://en.wikipedia.org/wiki/Action-adventure_game&quot;&gt;action-adventure games&lt;/a&gt; that focus on the player&#39;s exploration of an open world:&lt;/p&gt;
&lt;div class=&quot;grid grid-cols-2 gap-4 sm:grid-cols-3&quot;&gt;
  &lt;figure class=&quot;max-sm:col-span-2&quot;&gt;
    &lt;div class=&quot;flex h-full items-center justify-center&quot;&gt;
      &lt;img class=&quot;m-0 aspect-square object-contain object-center&quot; src=&quot;https://upload.wikimedia.org/wikipedia/en/8/85/Tunic_cover_art.jpg&quot; alt=&quot;Tunic&quot; /&gt;
    &lt;/div&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;Tunic&lt;/figcaption&gt;
  &lt;/figure&gt;
  &lt;figure&gt;
    &lt;div class=&quot;flex h-full items-center justify-center&quot;&gt;
      &lt;img class=&quot;m-0 aspect-square object-contain object-center&quot; src=&quot;https://cdn.wikimg.net/en/zeldawiki/images/2/27/TLoZ_FDS_Box.png&quot; alt=&quot;The Legend of Zelda&quot; /&gt;
    &lt;/div&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;The Legend of Zelda&lt;/figcaption&gt;
  &lt;/figure&gt;
  &lt;figure&gt;
    &lt;div class=&quot;flex h-full items-center justify-center&quot;&gt;
      &lt;img class=&quot;m-0 aspect-square object-contain object-center&quot; src=&quot;https://cdn.wikimg.net/en/zeldawiki/images/c/c7/ALttP_JP_Box.jpg&quot; alt=&quot;The Legend of Zelda: A Link to the Past&quot; /&gt;
    &lt;/div&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;A Link to the Past&lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;Tunic is heavily inspired by Zelda, but once again it&#39;s not just a clone. There are three videos on Youtube that elaborates this point quite well:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/CuXWSS-X1YY&quot;&gt;&amp;quot;Tunic is more than just a Zelda clone&amp;quot;&lt;/a&gt; by KevynTheJar&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/rYoZr24Zoao&quot;&gt;&amp;quot;The Legacy of Zelda | How Tunic Embraces a Classic&amp;quot;&lt;/a&gt; by Transparency&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/aGssYfAS7Hs&quot;&gt;&amp;quot;The Legend of Zelda (and how Tunic honors it)&amp;quot;&lt;/a&gt; by Liam Triforce&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are lots of other examples: &lt;a href=&quot;https://wikimon.net/Main_Page&quot;&gt;Digimon&lt;/a&gt; inspired by &lt;a href=&quot;https://bulbapedia.bulbagarden.net/wiki/Main_Page&quot;&gt;Pokémon&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Axiom_Verge&quot;&gt;Axiom Verge&lt;/a&gt; from &lt;a href=&quot;https://en.wikipedia.org/wiki/Metroid&quot;&gt;Metroid&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Antonblast&quot;&gt;Antonblast&lt;/a&gt; from &lt;a href=&quot;https://www.mariowiki.com/Wario&quot;&gt;Wario&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;(Also, all of the games mentioned above are sold on &lt;a href=&quot;https://en.wikipedia.org/wiki/Nintendo_eShop&quot;&gt;eShop&lt;/a&gt;, Nintendo&#39;s own game platform for their console line)&lt;/p&gt;
&lt;p&gt;Below are some videos listing the times when non-Nintendo games were inspired by, reference, easter eggs or parodied Mario, whether officially collaborating with Nintendo or not:&lt;/p&gt;
&lt;div class=&quot;grid gap-4 sm:grid-cols-2&quot;&gt;
  &lt;iframe class=&quot;aspect-video w-full&quot; src=&quot;https://www.youtube-nocookie.com/embed/A6ojk9jSZGI&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;iframe class=&quot;aspect-video w-full&quot; src=&quot;https://www.youtube-nocookie.com/embed/hFanHyoK204&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;iframe class=&quot;aspect-video w-full&quot; src=&quot;https://www.youtube-nocookie.com/embed/47No4sWlJsQ&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;iframe class=&quot;aspect-video w-full&quot; src=&quot;https://www.youtube-nocookie.com/embed/9kAiPZXUXqE&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;Other games from Nintendo also get reference:&lt;/p&gt;
&lt;div class=&quot;grid gap-4 sm:grid-cols-2 md:grid-cols-3&quot;&gt;
  &lt;iframe class=&quot;aspect-video w-full&quot; src=&quot;https://www.youtube-nocookie.com/embed/0wzRiE3Vkzo&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;iframe class=&quot;aspect-video w-full&quot; src=&quot;https://www.youtube-nocookie.com/embed/cyRTTXAmcSI&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;iframe class=&quot;aspect-video w-full&quot; src=&quot;https://www.youtube-nocookie.com/embed/OKVJCbRvN9E&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h3 id=&quot;nintendo-itself-gets-inspiration&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#nintendo-itself-gets-inspiration&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Nintendo itself gets inspiration&lt;/h3&gt;
&lt;p&gt;Steve Jobs once mentioned an interesting quote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Good artists copy. Great artists steal.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Nintendo have a lot of great talent, so of course they also &amp;quot;stolen&amp;quot; from elsewhere, such as the game Donkey Kong (the first game in which Mario appeared):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Donkey Kong was heavily inspired by 1930s American media. It was originally conceived as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Popeye&quot;&gt;Popeye&lt;/a&gt; game, based on the 1930s comic and animation, with Bluto being in the role of Donkey Kong, Popeye being Mario, and Olive Oyl being Lady.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Nintendo at that time owned the license to make games with characters from Popeye but for some technical reason, they had to change.&lt;/p&gt;
&lt;div class=&quot;grid grid-cols-2 gap-4&quot;&gt;
  &lt;figure&gt;
    &lt;div class=&quot;flex h-full items-center justify-center&quot;&gt;
      &lt;img class=&quot;m-0 h-full max-h-64 object-contain object-center&quot; src=&quot;https://mario.wiki.gallery/images/6/63/MarioInDKArtwork.jpg&quot; alt=&quot;Jumpman&quot; /&gt;
    &lt;/div&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;Mario in Donkey Kong&#39;s poster&lt;/figcaption&gt;
  &lt;/figure&gt;
  &lt;figure&gt;
    &lt;div class=&quot;flex h-full items-center justify-center&quot;&gt;
      &lt;img class=&quot;m-0 h-full max-h-64 object-contain object-center&quot; src=&quot;https://upload.wikimedia.org/wikipedia/en/0/00/Popeye_the_Sailor.png&quot; alt=&quot;Popeye&quot; /&gt;
    &lt;/div&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;Popeye&lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The 1930s film &lt;a href=&quot;https://en.wikipedia.org/wiki/King_Kong&quot;&gt;King Kong&lt;/a&gt; would serve as another inspiration and the setting of the game was New York City.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Like the movie King Kong, the villain in Nintendo&#39;s game is also a giant gorilla.&lt;/p&gt;
&lt;p&gt;And in the game Super Mario Bros: In &lt;a href=&quot;https://geekculture.co/interview-with-toru-iwatani-creator-of-pac-man&quot;&gt;an interview with Geek Culture&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Toru_Iwatani&quot;&gt;Toru Iwatani&lt;/a&gt; (father of Pac-Man) recounts:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I worked on the sequel &amp;quot;Pac-Land&amp;quot; and &amp;quot;Pac-Mania&amp;quot; and my favorite is &amp;quot;Pac-Land,&amp;quot; which is the pioneer of action games with horizontally running background. Mr. &lt;a href=&quot;https://en.wikipedia.org/wiki/Shigeru_Miyamoto&quot;&gt;Shigeru Miyamoto&lt;/a&gt;, who developed &amp;quot;Super Mario Bros.&amp;quot; told me that the game was influenced by Namco’s &lt;a href=&quot;https://en.wikipedia.org/wiki/Pac-Land&quot;&gt;&amp;quot;PAC-LAND&amp;quot;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;grid grid-cols-2 gap-4&quot;&gt;
  &lt;figure&gt;
    &lt;div class=&quot;flex h-full items-center justify-center bg-black&quot;&gt;
      &lt;img class=&quot;m-0 h-full max-h-96 object-contain object-center&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/super_mario_bros.jpg&quot; alt=&quot;Super Mario Bros&quot; /&gt;
    &lt;/div&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;Super Mario Bros&lt;/figcaption&gt;
  &lt;/figure&gt;
  &lt;figure&gt;
    &lt;div class=&quot;flex h-full items-center justify-center bg-black&quot;&gt;
      &lt;img class=&quot;m-0 h-full max-h-96 object-contain object-center&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/pac_land.jpg&quot; alt=&quot;Pac-Land&quot; /&gt;
    &lt;/div&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;Pac-Land&lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;
&lt;h3 id=&quot;official-response-from-nintendo&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#official-response-from-nintendo&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Official response from Nintendo&lt;/h3&gt;
&lt;p&gt;After announcing the &amp;quot;death&amp;quot; of Flappy Bird on social networks, Nguyen Ha Dong wrote a disclaimer:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/dongatory/status/432228383095668737&quot;&gt;&lt;strong&gt;Dong:&lt;/strong&gt; It is not anything related to legal issues. I just cannot keep it anymore.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Because of aftereffects from Kotaku&#39;s allegations, many people were skeptical of Dong&#39;s statement. But that is true. In an email to The Wall Street Journal, Nintendo spokesman Yasuhiro Minagawa reiterated the company&#39;s previous statements, saying that Nintendo has not complained about Flappy Bird&#39;s similarities to the game Super Mario Bros:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Quoted from Nintendo&#39;s spokesperson on &lt;a href=&quot;https://www.wsj.com/articles/BL-DGB-32728&quot;&gt;an article from The Wall Street Journal&lt;/a&gt;:&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;While we usually do not comment on the rumors and speculations, we have already denied the speculation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you thought Nintendo just said that because it wanted to avoid petty drama and maintain its image, you&#39;re wrong! Nintendo has a scandalous history of abusing copyright laws to satisfy an antiquated view of intellectual property:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nintendo has sent requests to remove many fan game products that Nintendo fans are passionate about. There are many large projects of equal quality to the games that Nintendo itself makes, for example &lt;a href=&quot;https://metroid2remake.blogspot.com/&quot;&gt;&amp;quot;AM2R&amp;quot;&lt;/a&gt;, &lt;a href=&quot;https://www.pokemonuranium.org/&quot;&gt;&amp;quot;Pokémon Uranium&amp;quot;&lt;/a&gt;, &lt;a href=&quot;http://www.oot-2d.com/&quot;&gt;&amp;quot;Ocarina Of Time 2D&amp;quot;&lt;/a&gt;, ... You can watch it through the video &lt;a href=&quot;https://youtu.be/B9F8gRaRbas&quot;&gt;&amp;quot;Fan Projects Taken Down by Nintendo&amp;quot;&lt;/a&gt; by T3rr0r for more details.&lt;/li&gt;
&lt;li&gt;While other game companies want Youtubers to make video about their games, even have to pay for it, Nintendo blocks monetization of all video with Nintendo&#39;s game. It wasn&#39;t until 2015 that the &amp;quot;Nintendo Creators Program&amp;quot; was open, allowing Youtubers to only receive 60% to 70% of video revenue. Not only that, Youtubers must register themselves to participate in the program and be accepted by Nintendo. It wasn&#39;t until the end of 2018 that Nintendo removed this program and allowed all YouTubers who played their games to make money freely.&lt;/li&gt;
&lt;li&gt;Many game companies spend their own money to organize e-sports tournaments, some even fail to attract fans (like Overwatch&#39;s esport tournament). Not only does Nintendo rarely organize tournaments, but they had also shutdown many tournaments that their dedicated fans organized.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Not to mention there are many other cases, EmpLemon&#39;s Video &lt;a href=&quot;https://youtu.be/xgKY9hmbfgo&quot;&gt;&amp;quot;Sacrifices to the Church of Nintendo&amp;quot;&lt;/a&gt; summarizes many cases where Nintendo abused copyright law. And they didn&#39;t even sue the billion-dollar app Flappy Bird. This says it all!&lt;/p&gt;
&lt;h3 id=&quot;as-for-kotaku&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#as-for-kotaku&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; As for Kotaku&lt;/h3&gt;
&lt;p&gt;On February 8th, two days after Kotaku&#39;s accusatory article was published, another author of the news site wrote an article &lt;a href=&quot;https://kotaku.com/the-flappy-bird-fiasco-1519938266&quot;&gt;&amp;quot;The Flappy Bird Fiasco&amp;quot;&lt;/a&gt; apologizing to Nguyen Ha Dong:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nguyen also wound up receiving some negative attention because of the art in his game. That&#39;s where Kotaku comes into the story more than I&#39;m comfortable with. And that&#39;s where I believe we owe Nguyen an apology. I&#39;ll say it now...&lt;/p&gt;
&lt;p&gt;Dong Nguyen, I&#39;m sorry about what we wrote about your game&#39;s art. And I&#39;m sorry if what we wrote contributed to any harassment you received about your game. Even if it didn&#39;t I wish we could do that one over.&lt;/p&gt;
&lt;p&gt;The author of that piece, Jason Schreier, has also asked to say the following...&lt;/p&gt;
&lt;p&gt;&amp;quot;Over the past couple of days, I&#39;ve spent a lot of time reading reactions and feedback to the article I published last week, and I&#39;ve spent a lot of time regretting it. The post was rash, and hasty, and below my usual standards. To Kotaku I apologize for allowing that to happen. To Dong Nguyen, I apologize for my poorly-chosen words, and I hope that you find peace.&amp;quot;&lt;/p&gt;
&lt;p&gt;Much has been made about that article we ran last Thursday, which originally was headlined &amp;quot;Flappy Bird Is Making $50,000 A Day Off Ripped Art.&amp;quot; The word &amp;quot;ripped&amp;quot; was too strong, and the article&#39;s author has come to regret it. I do, too, and wished I&#39;d caught it. The headline&#39;s been changed since then.&lt;/p&gt;
&lt;p&gt;I wish that partially because I disagree with the opinion of the piece. I see Flappy Bird as being inspired by Mario art. I think it&#39;s as fair an inspiration as the many inspirations we&#39;ve seen of classic Nintendo art in games from 3D Dot Game Heroes to Guacamelee to Braid. There&#39;s room for debate there, but that&#39;s where I stand.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;some-other-misinformation&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#some-other-misinformation&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Some other misinformation&lt;/h2&gt;
&lt;h3 id=&quot;impersonation-video&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#impersonation-video&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Impersonation video&lt;/h3&gt;
&lt;p&gt;During the time Flappy Bird was being taken down, the video &lt;a href=&quot;https://youtu.be/vG6AvXDZ84g&quot;&gt;&amp;quot;Flappy Bird - Message From Developer Dong Nguyen&amp;quot;&lt;/a&gt; appeared on Youtube, attracting a significant number of viewers:&lt;/p&gt;
&lt;iframe class=&quot;aspect-video w-full&quot; src=&quot;https://www.youtube-nocookie.com/embed/vG6AvXDZ84g&quot; title=&quot;Flappy Bird - Message From Developer Dong Nguyen&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;Ignoring the fact that the person in the video doesn&#39;t even look like Dong:&lt;/p&gt;
&lt;figure class=&quot;w-full&quot;&gt;
  &lt;img class=&quot;w-full&quot; src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/nguyen_ha_dong.webp&quot; alt=&quot;Nguyễn Hà Đông&quot; /&gt;
  &lt;figcaption class=&quot;text-center&quot;&gt;Picture of Nguyen Ha Dong from a RollingStone&#39;s article&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;The title of the video is also very unusual compared to videos announcing serious issues on social media. The title is stated in the third person. The video content is just a reread of what Mr. Dong said on Twitter about removing Flappy Bird...&lt;/p&gt;
&lt;h3 id=&quot;pewdiepie-made-faby-famous&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/16/#pewdiepie-made-faby-famous&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Pewdiepie made Faby famous?&lt;/h3&gt;
&lt;p&gt;Many people (including myself back then) thought that Flappy Bird was just a sinking game, that was luckily featured by the most famous YouTuber at that time - Pewdiepie. New gold spreads its wings and flies. The video &lt;a href=&quot;https://youtu.be/lQz6xhlOt18&quot;&gt;&amp;quot;FLAPPY BIRD - DONT PLAY THIS GAME!&amp;quot;&lt;/a&gt; posted on January 28 on the PewDiePie Youtube channel is believed by many netizens to be the direct cause of the Flappy Bird became famous.&lt;/p&gt;
&lt;iframe class=&quot;aspect-video w-full&quot; src=&quot;https://www.youtube-nocookie.com/embed/lQz6xhlOt18&quot; title=&quot;FLAPPY BIRD - DONT PLAY THIS GAME!&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;Based on &lt;a href=&quot;https://trends.google.com/trends/explore?date=2014-01-01%202014-04-01&amp;amp;geo=US&amp;amp;q=%2Fm%2F0_gzt9y&quot;&gt;Google Trends data from January to April of 2014 in America&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/google_trends_27.png&quot; alt=&quot;Google trends 27/1&quot; /&gt;
&lt;img src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/google_trends_28.png&quot; alt=&quot;Google trends 28/1&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Statistics show that the Flappy Bird keyword had already reached 9% of its popularity compared to its peak. And the keyword Flappy Bird did not have a sharp increase following Felix&#39;s video.&lt;/p&gt;
&lt;p&gt;Not only that, the data table below also shows that Flappy Bird has climbed to the top 1 on the App Store rankings since around January 15th:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://codeberg.org/NNB/blog-images/raw/branch/main/16/store_rank.webp&quot; alt=&quot;Store rank&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Not to mention, &lt;a href=&quot;https://twitter.com/search?q=flappy%20bird%20until%3A2014-01-26%20since%3A2014-01-01&amp;amp;f=live&quot;&gt;Flappy Bird was still mentioned a lot before the 28th on Twitter&lt;/a&gt;, made popular thanks to everyone joking about Flappy Bird being too difficult and &amp;quot;addictive&amp;quot;. There is also a parody video of Twitter posts called &lt;a href=&quot;https://youtu.be/0DMnVRU9G0Q&quot;&gt;&amp;quot;FLAPPY BIRD RUINED MY LIFE&amp;quot;&lt;/a&gt; posted on January 25, released 2 days after Felix&#39;s video.&lt;/p&gt;
&lt;p&gt;It becomes even clearer when you actually watch the video of Felix playing Flappy Bird, &lt;a href=&quot;https://youtu.be/lQz6xhlOt18?t=242&quot;&gt;starting at minute 4:02 in the video&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There&#39;s another game that you bro brought up...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Later, he also said:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I kind of know what it&#39;s about, but I never actually never played it myself.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Flappy Bird wasn&#39;t chosen by Pewdiepie by dumb luck. It was chosen because it was a famous rage game and many of his fans wanted him to play. PewDiePie&#39;s video, more or less, made Flappy Bird even more famous. But it is not the main or direct cause, and certainly not the core reason why Flappy Bird became a phenomenon.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>CLI, TUI and GUI</title>
    <link href="https://nnb.codeberg.page/blog/en/posts/15/"/>
    <updated>2023-12-30T00:00:00Z</updated>
    <id>https://nnb.codeberg.page/blog/en/posts/15/</id>
    <content xml:lang="en" type="html">&lt;h2 id=&quot;definitions&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/15/#definitions&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Definitions&lt;/h2&gt;
&lt;h3 id=&quot;gui&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/15/#gui&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; GUI&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;GUI&lt;/strong&gt; or &lt;strong&gt;G&lt;/strong&gt;raphical &lt;strong&gt;U&lt;/strong&gt;ser &lt;strong&gt;I&lt;/strong&gt;nterface is user interface type that allows users to interact through visual and graphic such as images, buttons, tabs, scroll bars... It&#39;s everywhere, it is like the default type of interface, the definition of user interface is self. All websites, smartphone interfaces, and the default file manager on your computer are all using GUI.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Graphical_user_interface&quot;&gt;(Read more on Wikipedia)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;tui&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/15/#tui&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; TUI&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;TUI&lt;/strong&gt; or &lt;strong&gt;T&lt;/strong&gt;ext-based &lt;strong&gt;U&lt;/strong&gt;ser &lt;strong&gt;I&lt;/strong&gt;nterface is like GUI but instead of having visual and graphic, everything is displayed in text. Characters can be bold, italic, underlined, uppercase, lowercase, blinking, with any foreground or/and background color... But the text must always be mono characters (on grid). We will mainly see this type of interface on software run on terminal such as text editor, media player, task manager...&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Text-based_user_interface&quot;&gt;(Read more on Wikipedia)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;cli&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/15/#cli&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; CLI&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CLI&lt;/strong&gt; or &lt;strong&gt;C&lt;/strong&gt;ommand &lt;strong&gt;L&lt;/strong&gt;ine &lt;strong&gt;I&lt;/strong&gt;nterface is an interface where the only way to interact is to write commands through a prompt and send it, the software will then return a results, and the user is allowed to type and send commands again.&lt;/p&gt;
&lt;p&gt;Software that &lt;strong&gt;uses&lt;/strong&gt; CLI typically includes shells such as Bash, Zsh, Nushell... Some REPL (read-eval-print loop) for programing languages like Python, Ruby, ... And other tools like &lt;a href=&quot;https://wiki.archlinux.org/title/NetworkManager#Usage&quot;&gt;&lt;code&gt;nmcli&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.mankier.com/1/bc&quot;&gt;&lt;code&gt;bc&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/printfn/fend&quot;&gt;&lt;code&gt;fend&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/leo-arch/clifm&quot;&gt;&lt;code&gt;clifm&lt;/code&gt;&lt;/a&gt;... But note that software that uses the CLI interface to display content inside it is &lt;strong&gt;not&lt;/strong&gt; CLI software, but it is TUI.&lt;/p&gt;
&lt;p&gt;CLI software is software run as command inside a shell, for example &lt;a href=&quot;https://www.mankier.com/1/ls&quot;&gt;&lt;code&gt;ls&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.mankier.com/1/cp&quot;&gt;&lt;code&gt;cp&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.mankier.com/1/mv&quot;&gt;&lt;code&gt;mv&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.mankier.com/1/rm&quot;&gt;&lt;code&gt;rm&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.mankier.com/1/cal&quot;&gt;&lt;code&gt;cal&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/dylanaraps/neofetch&quot;&gt;&lt;code&gt;neofetch&lt;/code&gt;&lt;/a&gt;, ... The general pattern of CLI softwares are like:&lt;/p&gt;
&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;command&lt;/span&gt; parameter &lt;span class=&quot;token parameter variable&quot;&gt;--flag&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Command-line_interface&quot;&gt;(Read more on Wikipedia)&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;cli-gui-and-tui&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/15/#cli-gui-and-tui&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; CLI &amp;gt; GUI (and TUI)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;CLI seems difficult to use and learn at first. But once you get used to it, you can operate in shell really fast and flexible. Using CLI is like programming a simple software and runs it at the same time.&lt;/li&gt;
&lt;li&gt;Most CLI tool launch and process in a blink, reduce friction in your workflow.&lt;/li&gt;
&lt;li&gt;There is a giant library of cool and useful CLI tools that allow you to do things that few GUI/TUI software can do. Many tools give you the freedom to do all kinds of things with your computer. You can fix, change or break the entire operating system if you want.&lt;/li&gt;
&lt;li&gt;Using CLI is powerful in that we can connect separate software to work together by taking &lt;code&gt;stdout&lt;/code&gt; (standard output) of a software and used it as &lt;code&gt;stdin&lt;/code&gt; (standard input) for another software. We call this pipe/piping. Two or more software connected together in this way is called a pipeline.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is an example of a pipeline (the &lt;a href=&quot;https://www.mankier.com/1/echo&quot;&gt;&lt;code&gt;echo&lt;/code&gt;&lt;/a&gt; command prints a string. &lt;a href=&quot;https://www.mankier.com/1/rev&quot;&gt;&lt;code&gt;rev&lt;/code&gt;&lt;/a&gt; reverses the input data. &lt;a href=&quot;https://www.figlet.org/&quot;&gt;&lt;code&gt;figlet&lt;/code&gt;&lt;/a&gt; turns strings into large ASCII letters. &lt;a href=&quot;https://www.mankier.com/1/tee&quot;&gt;&lt;code&gt;tee&lt;/code&gt;&lt;/a&gt; read from standard input and write to standard output and files, which a &amp;quot;files&amp;quot; can be a terminal output. Finally, the command &lt;a href=&quot;https://getclipboard.app/&quot;&gt;&lt;code&gt;cb&lt;/code&gt;&lt;/a&gt; copy input data to the clipboard):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ echo &#39;!dlroW ,olleH&#39; | rev | figlet | tee /dev/tty | cb
 _   _      _ _         __        __         _     _ _
| | | | ___| | | ___    &#92; &#92;      / /__  _ __| | __| | |
| |_| |/ _ &#92; | |/ _ &#92;    &#92; &#92; /&#92; / / _ &#92;| &#39;__| |/ _` | |
|  _  |  __/ | | (_) |    &#92; V  V / (_) | |  | | (_| |_|
|_| |_|&#92;___|_|_|&#92;___( )    &#92;_/&#92;_/ &#92;___/|_|  |_|&#92;__,_(_)
                    |/
[✔] Copied 336B
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>A rare $EDITOR hopping</title>
    <link href="https://nnb.codeberg.page/blog/en/posts/14/"/>
    <updated>2023-12-25T00:00:00Z</updated>
    <id>https://nnb.codeberg.page/blog/en/posts/14/</id>
    <content xml:lang="en" type="html">&lt;p&gt;I never actually use 4chan before, but I found the greentext format to be quite interesting for story telling. So this time I will try writing a blog in this style, hope you enjoy!&lt;/p&gt;
&lt;h2 id=&quot;emacs&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/14/#emacs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://www.gnu.org/software/emacs&quot;&gt;Emacs&lt;/a&gt;&lt;/h2&gt;
  &lt;p class=&quot;text-success&quot;&gt;
    &amp;gt; be me&lt;br /&gt;
    &amp;gt; just switch from windows 10 to kde neon&lt;br /&gt;
    &amp;gt; fall in love with it customizability&lt;br /&gt;
    &amp;gt; discover &lt;a class=&quot;text-success&quot; href=&quot;http://xahlee.info/emacs/emacs/emacs.html&quot;&gt;xah blog about emacs&lt;/a&gt;&lt;br /&gt;
    &amp;gt; also pp say that its the most customizable text editor&lt;br /&gt;
    &amp;gt; fitting with the linux spirit that i desire&lt;br /&gt;
    &amp;gt; install it&lt;br /&gt;
  &lt;/p&gt;
  &lt;p class=&quot;text-success&quot;&gt;
    &amp;gt; emacs also come with a shitty tui and a clutter gui&lt;br /&gt;
    &amp;gt; i minimize and customize the gui&lt;br /&gt;
    &amp;gt; emacs is now as good as the default text editor that come with the de&lt;br /&gt;
    &amp;gt; try out &lt;a class=&quot;text-success&quot; href=&quot;https://www.spacemacs.org/&quot;&gt;spacemacs&lt;/a&gt;&lt;br /&gt;
    &amp;gt; dont like it&lt;br /&gt;
    &amp;gt; its slow and way more bloat&lt;br /&gt;
    &amp;gt; decide to rice emacs from scratch&lt;br /&gt;
    &amp;gt; drown myself in the &lt;a class=&quot;text-success&quot; href=&quot;https://github.com/emacs-tw/awesome-emacs&quot;&gt;awesome emacs list&lt;/a&gt;&lt;br /&gt;
    &amp;gt; install a LOT of packages to emacs&lt;br /&gt;
    &amp;gt; spent months configuring emacs&lt;br /&gt;
    &amp;gt; loving it&lt;br /&gt;
  &lt;/p&gt;
  &lt;p class=&quot;text-success&quot;&gt;
    &amp;gt; emacs have a ton of features&lt;br /&gt;
    &amp;gt; too much features&lt;br /&gt;
    &amp;gt; humongously bloat!&lt;br /&gt;
    &amp;gt; not just ide level of bloat&lt;br /&gt;
    &amp;gt; but os level of bloat&lt;br /&gt;
    &amp;gt; even have a builtin file manager&lt;br /&gt;
    &amp;gt; and tetris&lt;br /&gt;
  &lt;/p&gt;
  &lt;p class=&quot;text-success&quot;&gt;
    &amp;gt; slowly feel overwhelmed and exhausted in the emacs config rabbit hole&lt;br /&gt;
    &amp;gt; still feel somewhat dissatisfied with the config...&lt;br /&gt;
  &lt;/p&gt;
&lt;p&gt;Learning about Emacs from XahLee&#39;s blogs, I discover &lt;a href=&quot;http://xahlee.info/kbd/keyboarding.html&quot;&gt;Xah Keyboard Guide&lt;/a&gt;, then of course learn about &lt;a href=&quot;http://xahlee.info/emacs/emacs/ergonomic_emacs_keybinding.html&quot;&gt;XahLee&#39;s ErgoEmacs Keybinding&lt;/a&gt; and &lt;a href=&quot;https://ergoemacs.github.io/&quot;&gt;Ergoemacs-mode&lt;/a&gt;, it&#39;s try to bind frequently used actions to easy to reach shortcut and use the commonly bound keys familiar to industry standard (e.g: &lt;kbd class=&quot;kbd kbd-sm&quot;&gt;Ctrl&lt;/kbd&gt; + &lt;kbd class=&quot;kbd kbd-sm&quot;&gt;z&lt;/kbd&gt; to undo, &lt;kbd class=&quot;kbd kbd-sm&quot;&gt;Ctrl&lt;/kbd&gt; + &lt;kbd class=&quot;kbd kbd-sm&quot;&gt;s&lt;/kbd&gt; to save). But it&#39;s heavy and breaks regularly, some of the binds I feel like missing or can be improved. So I decided to create &lt;a href=&quot;https://github.com/NNBnh/.emacs.d/blob/main/key.el&quot;&gt;my own bindings&lt;/a&gt;, unknowingly kickstart a length journey...&lt;/p&gt;
&lt;p&gt;Because I want a better Emacs keybinds instead of except it&#39;s legacy design, I couldn&#39;t stand the default keybinds and spent way too much time and energy to learn as much about Lips and Emacs&#39;s actions to config... That is the reason why I feel exhausted and dissatisfied with Emacs. And also at the time, I didn&#39;t know about &lt;a href=&quot;https://github.com/doomemacs/doomemacs&quot;&gt;Doom Emacs&lt;/a&gt;, an Emacs framework that doesn&#39;t bloat.&lt;/p&gt;
&lt;h2 id=&quot;neovim&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/14/#neovim&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://neovim.io/&quot;&gt;NeoVim&lt;/a&gt;&lt;/h2&gt;
  &lt;p class=&quot;text-success&quot;&gt;
    &amp;gt; watching some linux stuff on yt&lt;br /&gt;
    &amp;gt; saw some cool hackerman-looking text editor&lt;br /&gt;
    &amp;gt; its vim&lt;br /&gt;
    &amp;gt; pp love vim&lt;br /&gt;
    &amp;gt; specifically neovim&lt;br /&gt;
    &amp;gt; try it out&lt;br /&gt;
    &amp;gt; its very fast and light&lt;br /&gt;
    &amp;gt; feel like a hackerman&lt;br /&gt;
    &amp;gt; config nvim&lt;br /&gt;
    &amp;gt; just week later&lt;br /&gt;
    &amp;gt; i was able to config nvim to become a more ideal editor for me than emacs&lt;br /&gt;
  &lt;/p&gt;
&lt;p&gt;Emacs keybinds are weird, but Vi binds are otherworldly strange! Many keys feel redundant, some frequently used actions are place in awkward places...&lt;/p&gt;
&lt;p&gt;Vim introduce me to modal text editing. Simply put, it divides writing, editing and selecting and so on into separate modes, and so the user just need to press buttons to perform actions instead of holding down multiple keys combination. it took a few days to get used to, after that, ... [&lt;strong&gt;Enlightenment~&lt;/strong&gt;], editing feel like dancing my fingers on the keyboard!&lt;/p&gt;
&lt;p&gt;Vi binds ecosystem is huge with a lot of popular tools implementing it in one way or the other, one that learn Vi keys will benefit a lot by it&#39;s ecosystem. I of course ignoring it and continue my own keybinds saga.&lt;/p&gt;
&lt;p&gt;This time I decide to turn the keybinds from my custom config into a big project, I create &lt;a href=&quot;https://github.com/NNBnh/bkey-old&quot;&gt;Bkey&lt;/a&gt; its a universal keybinds system design for almost all applications. By define each key on the keyboard with a meaning, the applications can bind their own set of shortcuts/actions to fit those meanings. And come with it: &lt;a href=&quot;https://github.com/NNBnh/bkey-vim&quot;&gt;Bkey-Vim&lt;/a&gt; a Bkey implement for Vim.&lt;/p&gt;
&lt;h2 id=&quot;kakoune&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/14/#kakoune&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://kakoune.org/&quot;&gt;Kakoune&lt;/a&gt;&lt;/h2&gt;
  &lt;p class=&quot;text-success&quot;&gt;
    &amp;gt; saw &lt;a class=&quot;text-success&quot; href=&quot;https://youtu.be/sbfCSHhopT4&quot;&gt;a video about kakoune by dt&lt;/a&gt;&lt;br /&gt;
    &amp;gt; skeptical at first&lt;br /&gt;
    &amp;gt; then realize its genius design&lt;br /&gt;
    &amp;gt; switch editor for the third time&lt;br /&gt;
    &amp;gt; kakoune is extremely minimalistic&lt;br /&gt;
    &amp;gt; and have better default&lt;br /&gt;
    &amp;gt; plus easier to config than previous editor&lt;br /&gt;
    &amp;gt; its build from the ground up with &lt;a class=&quot;text-success&quot; href=&quot;https://kakoune.org/why-kakoune/why-kakoune.html&quot;&gt;its philosophy&lt;/a&gt;&lt;br /&gt;
    &amp;gt; e.g: object followed by verb (like how thing should be)&lt;br /&gt;
    &amp;gt; multiple selections is the best things ever introduced to text editors&lt;br /&gt;
    &amp;gt; its easy to understand, fast, convenient, orthogonal, flexible and powerful&lt;br /&gt;
    &amp;gt; boy i can never go back to those non multi selections editor every again&lt;br /&gt;
  &lt;/p&gt;
&lt;p&gt;When switching to Kakoune, I decide to overhaul the Bkey project, rebrand it to &lt;a href=&quot;https://github.com/NNBnh/bmap&quot;&gt;Bmap&lt;/a&gt; and create &lt;a href=&quot;https://github.com/NNBnh/bmap.kak&quot;&gt;Bmap.kak&lt;/a&gt; a Bmap implement for Kakoune.&lt;/p&gt;
&lt;h2 id=&quot;other-tui-editors&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/14/#other-tui-editors&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Other TUI editors&lt;/h2&gt;
  &lt;p class=&quot;text-success&quot;&gt;
    &amp;gt; i also try out other tui editors later on:&lt;br /&gt;
  &lt;/p&gt;
&lt;h3 id=&quot;helix&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/14/#helix&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://helix-editor.com/&quot;&gt;Helix&lt;/a&gt;&lt;/h3&gt;
  &lt;p class=&quot;text-success&quot;&gt;
    &amp;gt; helix is like kakoune with builtin lsp and tree sitter&lt;br /&gt;
    &amp;gt; written in rust&lt;br /&gt;
    &amp;gt; blazingly fast&lt;br /&gt;
  &lt;/p&gt;
&lt;p&gt;I also wrote a lengthy features requests and changes to &lt;a href=&quot;https://github.com/helix-editor/helix/issues/1179&quot;&gt;an issues on Helix&#39;s Github&lt;/a&gt;, of course it got rejected.&lt;/p&gt;
&lt;p&gt;I try to make &lt;a href=&quot;https://github.com/NNBnh/bmap-helix&quot;&gt;Bmap-Helix&lt;/a&gt; (unfinished).&lt;/p&gt;
&lt;h3 id=&quot;pepper&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/14/#pepper&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://vamolessa.itch.io/pepper&quot;&gt;Pepper&lt;/a&gt;&lt;/h3&gt;
  &lt;p class=&quot;text-success&quot;&gt;
    &amp;gt; probably the best designed tui text editor that i know of&lt;br /&gt;
    &amp;gt; its building up upon Kakoune philosophy&lt;br /&gt;
    &amp;gt; but use caret style cursors&lt;br /&gt;
    &amp;gt; (cursor is not a block in a characters but a thin line between two characters)&lt;br /&gt;
    &amp;gt; like cursors on any other gui apps&lt;br /&gt;
    &amp;gt; its keybinds actions are elegantly and convenient&lt;br /&gt;
    &amp;gt; pepper is bloat free&lt;br /&gt;
    &amp;gt; its doesnt having any feature that could instead be implemented by integrating an external tool&lt;br /&gt;
    &amp;gt; its more minimal than nvim and helix&lt;br /&gt;
    &amp;gt; but still have enough features (like lsp support) out of the box unlike kakoune&lt;br /&gt;
    &amp;gt; the downside its although pepper is open source&lt;br /&gt;
    &amp;gt; its not free&lt;br /&gt;
    &amp;gt; at the time i try it still very buggy and unpolish&lt;br /&gt;
  &lt;/p&gt;
&lt;p&gt;And of course I ertend to make &lt;a href=&quot;https://github.com/NNBnh/bmap-pepper&quot;&gt;Bmap-Pepper&lt;/a&gt; (unfinished).&lt;/p&gt;
&lt;h2 id=&quot;the-tiny-problem-with-tui-editor&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/14/#the-tiny-problem-with-tui-editor&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; The tiny problem with TUI editor&lt;/h2&gt;
&lt;p&gt;Normally when I&#39;m moving around the file system in the shell, if I want to edit some files, I want to open the editor in a new window and leave the shell in the back, so latter I can do other things on the same path rather than replacing the current shell with the editor. I could write a script/alias/function to do that, but isn&#39;t a GUI editor like VScode already opened files in a new window by default?&lt;/p&gt;
&lt;h2 id=&quot;vscode&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/14/#vscode&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VScode&lt;/a&gt;&lt;/h2&gt;
  &lt;p class=&quot;text-success&quot;&gt;
    &amp;gt; thinking about switching back to gui editor&lt;br /&gt;
    &amp;gt; then a desperate thought appear&lt;br /&gt;
    &amp;gt; maybe vscode&lt;br /&gt;
    &amp;gt; the normie editor&lt;br /&gt;
    &amp;gt; is the answer&lt;br /&gt;
    &amp;gt; ...&lt;br /&gt;
    &amp;gt; i have take a look at vscode in the past&lt;br /&gt;
    &amp;gt; saw it have made a lot of right design decisions&lt;br /&gt;
    &amp;gt; and used it as a standard to improve my other editor config&lt;br /&gt;
    &amp;gt; maybe i should give it try&lt;br /&gt;
    &amp;gt; ...&lt;br /&gt;
    &amp;gt; install vscode&lt;br /&gt;
    &amp;gt; probably the editor that come with the best default setting&lt;br /&gt;
    &amp;gt; its not slow or heavy as pp said&lt;br /&gt;
  &lt;/p&gt;
  &lt;p class=&quot;text-success&quot;&gt;
    &amp;gt; its keybinds is industry standard&lt;br /&gt;
    &amp;gt; multi selections in vscode is not as good as powerful as kakoune but still extremely good&lt;br /&gt;
    &amp;gt; switching back to non modal editing feel a bit slow&lt;br /&gt;
    &amp;gt; but for me its not a drop in productivity at all&lt;br /&gt;
    &amp;gt; i still have my skill navigate with my trusty arrow keys&lt;br /&gt;
  &lt;/p&gt;
  &lt;p class=&quot;text-success&quot;&gt;
    &amp;gt; its have the best lps support&lt;br /&gt;
    &amp;gt; and ton of other features&lt;br /&gt;
    &amp;gt; yet none of it feel bloat&lt;br /&gt;
    &amp;gt; vscode plugins ecosystem is the biggest&lt;br /&gt;
    &amp;gt; easy to learn and config&lt;br /&gt;
    &amp;gt; start spending more time to code than tweaking the editor&lt;br /&gt;
    &amp;gt; seem like its the most popular editor for reasons&lt;br /&gt;
  &lt;/p&gt;
  &lt;p class=&quot;text-success&quot;&gt;
    &amp;gt; while everyone share about how they switch from vscode to neovim and emacs&lt;br /&gt;
    &amp;gt; i do this:&lt;br /&gt;
    &amp;gt; emacs -&amp;gt; neovim -&amp;gt; kakoune -&amp;gt; helix -&amp;gt; pepper -&amp;gt; vscode&lt;br /&gt;
    &amp;gt; now that is a rare &lt;code class=&quot;text-success&quot;&gt;$EDITOR&lt;/code&gt; hopping&lt;br /&gt;
  &lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>My ideal distro</title>
    <link href="https://nnb.codeberg.page/blog/en/posts/13/"/>
    <updated>2023-08-12T00:00:00Z</updated>
    <id>https://nnb.codeberg.page/blog/en/posts/13/</id>
    <content xml:lang="en" type="html">&lt;h2 id=&quot;why-linux-in-the-first-place&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/13/#why-linux-in-the-first-place&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Why Linux in the first place?&lt;/h2&gt;
&lt;p&gt;I choose Linux over Windows and MacOS because:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It is fast, lightweight.&lt;/li&gt;
&lt;li&gt;It is &lt;a href=&quot;https://wikipedia.org/wiki/Free_and_open-source_software&quot;&gt;FOSS&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.privacytools.io/os&quot;&gt;It&#39;s the most privacy desktop OS&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;And most importantly it&#39;s customizability is endless.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;base-distro&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/13/#base-distro&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Base Distro&lt;/h2&gt;
&lt;p&gt;My dotfiles is quite flexible, it can be easily adapted to almost any distro. But I still have preferences (in order): Arch-based &amp;gt; Ubuntu-based &amp;gt; Ubuntu/Debian-based &amp;gt; other.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://fedoraproject.org/&quot;&gt;Fedora&lt;/a&gt; seems to be more stable and up-to-date than &lt;a href=&quot;https://ubuntu.com/&quot;&gt;Ubuntu&lt;/a&gt;, but it doesn&#39;t have packages that aren&#39;t strictly open source, a few can still be installed but it&#39;s annoying.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://archlinux.org/&quot;&gt;Arch&lt;/a&gt; has the most packages &lt;em&gt;if&lt;/em&gt; including the AUR, which can sometimes be quite janky. Arch has a reputation for being easier to break than other distros, but I find all distros to break equally easy...&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nixos.org/&quot;&gt;NixOS&lt;/a&gt; is very competitive to Arch in terms of package quantity and quality. But I find Nix to be is quite janky after ricing it!&lt;/p&gt;
&lt;h2 id=&quot;desktop-environment&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/13/#desktop-environment&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Desktop Environment&lt;/h2&gt;
&lt;p&gt;After using window manager for a while, I decided to go back to DE (detailed explanation &lt;a href=&quot;https://nnb.codeberg.page/blog/en/posts/12/#5-maximalist&quot;&gt;here&lt;/a&gt;) because I wanted to find an easy and stable experience that &amp;quot;it just works&amp;quot;.&lt;/p&gt;
&lt;p&gt;Some DEs like &lt;a href=&quot;https://www.lxde.org/&quot;&gt;LXDE&lt;/a&gt; and &lt;a href=&quot;https://xfce.org/&quot;&gt;XFCE&lt;/a&gt; are very light, too light in fact, it is not suitable for me because it is not as customizable as I want.&lt;/p&gt;
&lt;p&gt;DEs like &lt;a href=&quot;https://elementary.io/&quot;&gt;Pantheon&lt;/a&gt; and &lt;a href=&quot;https://www.deepin.org/en/dde&quot;&gt;Deepin&lt;/a&gt; have a pretty good out-of-the-box experience, but it&#39;s quite limited when it come to customization. I recommend this DE if you love it at first sight and have no need for customization.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.kde.org/plasma-desktop&quot;&gt;KDE Plasma&lt;/a&gt; is easy to customize out-of-the-box, from the simplest things to the most advanced. Plasma is easy to configure, suitable for Linux newbies who want to rice. KDE apps are also feature-rich (e.g: &lt;a href=&quot;https://apps.kde.org/dolphin&quot;&gt;Dolphin&lt;/a&gt;) but its interface is a bit cramped.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nnb.codeberg.page/blog/en/posts/13/www.gnome.org&quot;&gt;Gnome&lt;/a&gt; design is very harmonious, consisted, minimalistic and elegant. Switching from Windows or other DE to Gnome initially feeling strange, but after a while you will understand the beauty of the design and a great workflow that Gnome brings to you. GNOME is actually no less than KDE but actually better when it comes to customization: Although GNOME is not officially supported, you can install &lt;a href=&quot;https://extensions.gnome.org/&quot;&gt;extensions&lt;/a&gt;. Gnome extensions are very diverse and extensive, it integrates well into DE. Gnome has extensions like &lt;a href=&quot;https://extensions.gnome.org/extension/1287/unite&quot;&gt;Unite&lt;/a&gt; while KDE can hardly config to do the same as convenience as Gnome.&lt;/p&gt;
&lt;h2 id=&quot;other-requirements&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/13/#other-requirements&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Other requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Bloat-free: Do not preinstall software like games, maps, image/video editors or even web browsers. Don&#39;t put a bunch of software that some people might or might not like, let the users choose the software they want themselves. The bloatware may be pre-installed in the live-image but leave it as an unchecked option during the installation process.&lt;/li&gt;
&lt;li&gt;DE mustn&#39;t have any theming/branding presented, just the pure default theme DE.&lt;/li&gt;
&lt;li&gt;The distro should preinstalled:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.flatpak.org/&quot;&gt;Flatpak&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wikipedia.org/wiki/CJK_characters&quot;&gt;A CJK font&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Necessary video codex and firmware.&lt;/li&gt;
&lt;li&gt;Archive format like &lt;a href=&quot;https://7-zip.org/&quot;&gt;7-Zip&lt;/a&gt;, &lt;a href=&quot;https://www.rarlab.com/&quot;&gt;Rar&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;CLI tools: &lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt; and &lt;a href=&quot;https://curl.se/&quot;&gt;Curl&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Vietnamese input method like &lt;a href=&quot;https://www.unikey.org/en&quot;&gt;Unikey&lt;/a&gt; or better.&lt;/li&gt;
&lt;li&gt;Tools to tweaks the DE:
&lt;ul&gt;
&lt;li&gt;If it&#39;s Gnome then it should have &lt;a href=&quot;https://gitlab.gnome.org/GNOME/gnome-tweaks&quot;&gt;Gnome Tweaks&lt;/a&gt; and &lt;a href=&quot;https://wiki.gnome.org/Projects/GnomeShellIntegration&quot;&gt;&lt;code&gt;gnome-browser-connector&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If KDE then it&#39;s &lt;a href=&quot;https://store.kde.org/p/1005410&quot;&gt;Kvantum&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;my-ideal-distro&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/13/#my-ideal-distro&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; My ideal distro&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://vanillaos.org/&quot;&gt;Vanilla OS&lt;/a&gt; is a immutable distro that allows users to install applications from any Linux distro from Arch, Fedora to NixOS. It checks a lot on the list but when I tried it early 2023, it didn&#39;t seem to be ready yet... Vanilla was very janky, it freezes when I wake it up after suspend...&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blendos.co/&quot;&gt;Blend OS&lt;/a&gt; is similar to vanilla but It&#39;s Arch-based, it&#39;s a bit bloater than Vanilla but also more stable. It also allows users to choose other DE than Gnome and Users can easily access CLI tools inside a container by write &lt;code&gt;command-name.container-name&lt;/code&gt; in the terminal.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Five stages of minimalism rice</title>
    <link href="https://nnb.codeberg.page/blog/en/posts/12/"/>
    <updated>2023-08-10T00:00:00Z</updated>
    <id>https://nnb.codeberg.page/blog/en/posts/12/</id>
    <content xml:lang="en" type="html">&lt;p&gt;&lt;a href=&quot;https://www.reddit.com/r/unixporn/comments/s0cccz/berry_ayudark_my_super_rice&quot;&gt;&lt;img src=&quot;https://i.imgur.com/7DWRz1Z.webp&quot; alt=&quot;Berry Rice&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While writing &lt;a href=&quot;https://nnb.codeberg.page/blog/en/posts/9/&quot;&gt;Image viewer/media player for minimalist&lt;/a&gt; about the five stages of rice image viewer, I realized that those five stages are not just about rice image viewer, it&#39;s about minimalism rice as a whole. So I wrote this blog post to dive into the five stages of minimalist rice.&lt;/p&gt;
&lt;h2 id=&quot;1-normie&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/12/#1-normie&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; 1. Normie&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://i.imgur.com/NTHZScu.webp&quot;&gt;&lt;img src=&quot;https://i.imgur.com/NTHZScu.webp&quot; alt=&quot;KDE Rice&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;These newbies have just installed Linux, specifically Ubuntu or Ubuntu-based with a popular DE like Gnome or KDE. They installed some extensions, themes, icons and felt quite satisfied with their setup, thinking that they would never thinker with the OS ever again.&lt;/p&gt;
&lt;h2 id=&quot;2-beginner&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/12/#2-beginner&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; 2. Beginner&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://codeberg.org/NNB/dotfiles/releases/tag/v1.0.0&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/43980777/104730274-50495600-576c-11eb-9520-890cb45815d9.png&quot; alt=&quot;BSPWM Rice&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After installing Linux and everything, that newbie must also watch a lot of Linux videos on Youtube, so his feed shows quite a lot of Linux Youtubers, he clicked on it and suddenly heard the three words &amp;quot;I use Arch&amp;quot; (four if you count &amp;quot;BTW&amp;quot;). They back up everything and distro-hop to Arch or an Arch-based distro. It wasn&#39;t long before they also discovered &lt;a href=&quot;https://www.reddit.com/r/unixporn&quot;&gt;r/unixporn&lt;/a&gt;, their eyes light up, they quickly install &lt;a href=&quot;https://github.com/baskerville/bspwm&quot;&gt;BSPWM&lt;/a&gt; + &lt;a href=&quot;https://polybar.github.io/&quot;&gt;Polybar&lt;/a&gt; or &lt;a href=&quot;https://hyprland.org/&quot;&gt;Hyprland&lt;/a&gt; + &lt;a href=&quot;https://github.com/Alexays/Waybar&quot;&gt;Waybar&lt;/a&gt; and spend 2-3 weeks to rice it.&lt;/p&gt;
&lt;p&gt;Using tiling WM is dedicated to following the keyboard workflow, but the keyboard workflow on Linux can&#39;t be perfect without the terminal.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;font-mono&quot;&gt;GUI != Cool&lt;br /&gt;
TTY == Hackerman&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;They started learning how to use the shell, replacing most GUI apps with TUI/CLI apps and replacing the main shell with anything but Bash. They rice their prompt with &lt;a href=&quot;https://starship.rs/&quot;&gt;Starship&lt;/a&gt;, installs &lt;a href=&quot;https://github.com/sts10/rust-command-line-utilities#unix-to-rust-replacements-or-near-replacements&quot;&gt;Exa and other Rust-replacements CLI tool&lt;/a&gt;. Wouldn&#39;t be surprised if they&#39;ve spent months learning and configuring &lt;a href=&quot;https://neovim.io/&quot;&gt;NeoVim&lt;/a&gt; at this point.&lt;/p&gt;
&lt;h2 id=&quot;3-minimalist&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/12/#3-minimalist&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; 3. Minimalist&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://discord.com/channels/635612648934735892/1033210791320625243/1033339746463789096&quot;&gt;&lt;img src=&quot;https://i.imgur.com/Sb9iZcz.webp&quot; alt=&quot;Cool Discord Rice&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://codeberg.org/NNB/dotfiles/releases/tag/v3.3.0&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/43980777/172338839-482602d7-d57b-4152-a368-2333cf4c0d79.png&quot; alt=&quot;HerbstLuftWM Rice&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;tiling-wm-is-bloat&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/12/#tiling-wm-is-bloat&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Tiling WM is bloat&lt;/h3&gt;
&lt;p&gt;I used to use an advanced tiling WM but after I read &lt;a href=&quot;http://xahlee.info/linux/why_tiling_window_manager_sucks.html&quot;&gt;this post&lt;/a&gt;. When I first reading the post, I hate it, I think it is stupid, he just using the wrong way... But then I realize that my workflow rarely need tiling windows in a complex way to begin with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When I&#39;m using GUI app with mouse, I always maximize the apps.&lt;/li&gt;
&lt;li&gt;When using the terminal or text editor, I just want to look at the focus window and see no value of looking at 3-4 terminal at the same time.&lt;/li&gt;
&lt;li&gt;Tiling 3-4 windows on the screen make everything cramped, the only advantage of this is to easily interact things between windows with a mouse which contradict with the keyboard workflow.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Time to move to floating WM. The thing is that minimalist WMs like &lt;a href=&quot;https://github.com/dylanaraps/sowm&quot;&gt;SOWM&lt;/a&gt; and &lt;a href=&quot;https://berrywm.org/&quot;&gt;Berry&lt;/a&gt; are pretty janky (at least at the time of writing this) so go back to tiling WM we do, we just need to set the rule to make windows automatically float.&lt;/p&gt;
&lt;h3 id=&quot;bar-is-also-bloat&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/12/#bar-is-also-bloat&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Bar is also bloat&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;*Sniff sniff*&lt;/em&gt; I smell bloat, and that smell comes from the bar. Switch to a lighter bar like &lt;a href=&quot;https://github.com/LemonBoy/bar&quot;&gt;Lemonbar&lt;/a&gt; or even &lt;a href=&quot;https://sw.kovidgoyal.net/kitty/kittens/panel/#command-line-interface&quot;&gt;turn the terminal into bar&lt;/a&gt; is unlikely to get rid of the stinky bloat smell.&lt;/p&gt;
&lt;p&gt;The problem is that it takes up precious space on my screen, a 16 to 24 pixel-wide space that stretches from one end to the other of the screen is &lt;strong&gt;wasted&lt;/strong&gt; to display: the clock, workspaces, and some crappy information that I really don&#39;t need to check constantly. Unacceptable, throw the bar away!&lt;/p&gt;
&lt;p&gt;You can show the list of workspaces and the clock only when switching workspaces or using keyboard shortcuts to &lt;a href=&quot;https://gist.github.com/NNBnh/5f6e601a6a82a6ed43b1959698758141?permalink_comment_id=3735888#gistcomment-3735888&quot;&gt;display it through a notification&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Or go the hardcore route and ditch it altogether, check the time on your watch, wall clock, or use the &lt;code&gt;date&lt;/code&gt; command XD. Workspaces are really not necessary when I always maximize windows and rarely tile them anyway. Just use a workspace-less desktop, no need to config, no need to display.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;4-extreme-minimalist&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/12/#4-extreme-minimalist&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; 4. Extreme Minimalist&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://codeberg.org/NNB/dotfiles/releases/tag/v3.5.0&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/43980777/218121026-2d2ddb94-5105-4df8-a6a9-8ab632b69ce3.png&quot; alt=&quot;TTY rice w/ Zellij&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WM... is Bloat. We can also get rid of WM and login manager altogether. Use full TTY from Linux Kernel and type the command to open GUI app... &lt;a href=&quot;https://github.com/K4zoku/nowm&quot;&gt;NOWM&lt;/a&gt; or &lt;a href=&quot;https://git.disroot.org/root_informatica/wms&quot;&gt;[wms]&lt;/a&gt; will make the experience less miserable without WM.&lt;/p&gt;
&lt;p&gt;Remember those TUI/CLI apps we installed at the beginner stage? We realize we don&#39;t need 80% of it, we would rather use the tools available in the POSIX standard to make the script more portable. Then we even removed the file manager!&lt;/p&gt;
&lt;p&gt;The shell prompt is now just &amp;quot;&lt;code&gt;$&lt;/code&gt;&amp;quot;, &lt;code&gt;pwd&lt;/code&gt; is the only torch that lights us the way in the file system.&lt;/p&gt;
&lt;p&gt;The rice is no longer minimalist, it has become a black hole. Few are brave enough to go beyond, but some legends continue, The few features that identifies them is that they do &lt;a href=&quot;https://www.linuxfromscratch.org/lfs&quot;&gt;Linux From Scratch&lt;/a&gt; and know what &lt;a href=&quot;https://wikipedia.org/wiki/Linux_framebuffer&quot;&gt;Linux framebuffer&lt;/a&gt; is.&lt;/p&gt;
&lt;h2 id=&quot;5-maximalist&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/12/#5-maximalist&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; 5. Maximalist&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Aylur/dotfiles/tree/gnome43&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Aylur/dotfiles/gnome43/assets/rose.png&quot; alt=&quot;Gnome Rice&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After a tiresome period of extreme minimalist rice, they have a different view of minimalism. They realize that using DE is very minimal in terms of time and effort. To be honest, DE is not that bloat, It has some features that although we don&#39;t always use, but having it is still very convenient in some situation. &amp;quot;And if I don&#39;t install or configure anything but just use the default stuff from the DE, the dotfiles will be a lot more minimal!&amp;quot;&lt;/p&gt;
&lt;p&gt;And so they decided to go back to installing DE. But this time, with more experience and skill, their rice is better than ever. They even installed more fancy features, more personality, going against the previous minimalism... Finally they felt quite satisfied with their setup, thinking that they would never thinker with the OS ever again...&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Credit to &lt;a href=&quot;https://github.com/K4zoku&quot;&gt;Kazoku&lt;/a&gt; for the Rice images!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Window&#39;s title</title>
    <link href="https://nnb.codeberg.page/blog/en/posts/11/"/>
    <updated>2023-08-09T00:00:00Z</updated>
    <id>https://nnb.codeberg.page/blog/en/posts/11/</id>
    <content xml:lang="en" type="html">&lt;p&gt;Window&#39;s title is the most underrated aspect of a desktop when in fact it&#39;s very useful:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It show information about the running programs in a standard way.&lt;/li&gt;
&lt;li&gt;It displays the titles of multiple windows which help us identify similar open applications (like when you open a bunch of text file and they&#39;re all look similar).&lt;/li&gt;
&lt;li&gt;It&#39;s easier for mouse user to interact with the window itself (not the application inside).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But what is the best way to display window&#39;s title, let&#39;s take a look at some method.&lt;/p&gt;
&lt;h2 id=&quot;key-terms&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/11/#key-terms&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Key terms&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Busy workspace: Workspace that have split layout container as it&#39;s first child.&lt;/li&gt;
&lt;li&gt;Tabs workspace: Workspace that have tabs layout container as it&#39;s first child. Because I turn &lt;code&gt;smart_gaps on&lt;/code&gt; so a tabs workspace will not have gaps.&lt;/li&gt;
&lt;li&gt;The bar: (Usually called taskbar) will be refer as information bar.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;legacy&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/11/#legacy&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Legacy&lt;/h2&gt;
&lt;p&gt;This is the method that being used in Windows OS and most Linux&#39;s DE, it&#39;s display window&#39;s title both attach to the window itself and then show a list of windows on the information bar.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Busy workspace&lt;/th&gt;
&lt;th&gt;Tabs workspace&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/43980777/108809472-7ff54480-75db-11eb-8bef-8cd640e1072a.png&quot; alt=&quot;bothBusy&quot; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/43980777/108809474-808ddb00-75db-11eb-8dbb-35b9fa59878f.png&quot; alt=&quot;bothTab&quot; /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;pro&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/11/#pro&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Pro&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;This is a legacy design that most people get used to.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;con&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/11/#con&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Con&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The design is too old, it&#39;s look outdated:
&lt;ul&gt;
&lt;li&gt;Display windows title in two place is redundant.&lt;/li&gt;
&lt;li&gt;And make the desktop cramped.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;fix&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/11/#fix&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Fix&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Just used other method...&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;detach&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/11/#detach&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Detach&lt;/h2&gt;
&lt;p&gt;Only show a list of windows on the information bar.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Busy workspace&lt;/th&gt;
&lt;th&gt;Tabs workspace&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/43980777/108809488-84b9f880-75db-11eb-8015-2729e907d094.png&quot; alt=&quot;taskBusy&quot; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/43980777/108809489-85528f00-75db-11eb-9974-0956ba00ec1b.png&quot; alt=&quot;taskTab&quot; /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;pro-1&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/11/#pro-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Pro&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;This method give you the biggest screen real estate.&lt;/li&gt;
&lt;li&gt;And still shows you all the information: This is better than the &lt;em&gt;Attach method&lt;/em&gt; in tabs workspace because it can even show additional information (workspaces and clock).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;con-1&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/11/#con-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Con&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The problem is the way the information is presented, a list of title can show you how many windows and their name but not their location, so you end up confusing not knowing which title is correspond to which window... This defeat the whole purpose of display title for each window.&lt;/li&gt;
&lt;li&gt;You can&#39;t even tell if the container have tabs or not.&lt;/li&gt;
&lt;li&gt;It&#39;s hard for mouse user to interact with a window (drag and move window around).&lt;/li&gt;
&lt;li&gt;Those titles can take a lot of space in the information bar, space that can be used to display &lt;code&gt;CPU&lt;/code&gt;, &lt;code&gt;MEM&lt;/code&gt;, &lt;code&gt;DISK&lt;/code&gt;, &lt;code&gt;TEMP&lt;/code&gt;, &lt;code&gt;PLAYING&lt;/code&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;fix-1&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/11/#fix-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Fix&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&amp;quot;you can&#39;t even tell if the container have tabs or not&amp;quot;: You can make a container show title bar if it&#39;s has tabs but this is redundant to show title in two place.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;attach&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/11/#attach&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Attach&lt;/h2&gt;
&lt;p&gt;Show window&#39;s title attach to the window itself.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Busy workspace&lt;/th&gt;
&lt;th&gt;Tabs workspace&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/43980777/108809490-85eb2580-75db-11eb-8900-7c81a2f22a28.png&quot; alt=&quot;titleBusy&quot; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/43980777/108809492-8683bc00-75db-11eb-8fb7-8dbe4442787f.png&quot; alt=&quot;titleTab&quot; /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;pro-2&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/11/#pro-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Pro&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Everything is simple and clear, you know exactly which title is correspond to which window.&lt;/li&gt;
&lt;li&gt;It&#39;s easy for mouse user to interact with a window (drag and move window around).&lt;/li&gt;
&lt;li&gt;If you have an information bar, this method leave more space to the information bar than &lt;em&gt;Detach method&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;con-2&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/11/#con-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Con&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;This method take a bit more screen real estate than &lt;em&gt;Detach method&lt;/em&gt; in specific conditions e.g: In the busy workspace, you can see most window&#39;s title bar just sit on the top of the screen but &lt;code&gt;win4&lt;/code&gt;&#39;s title bar (on image) take more space in the middle of the screen unlike &lt;em&gt;Detach method&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;If you have an information bar, this method will take as much screen real estate as &lt;em&gt;legacy method&lt;/em&gt; although that space is used more efficiently.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;fix-2&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/11/#fix-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Fix&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;About the screen real estate issue:
&lt;ul&gt;
&lt;li&gt;You can hide the information bar and only show it when holding the &lt;kbd class=&quot;kbd&quot;&gt;Super&lt;/kbd&gt; key like &lt;a href=&quot;https://user-images.githubusercontent.com/43980777/108533634-c57bee00-730b-11eb-9b18-f17b3ca91ce6.mp4&quot;&gt;this&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Or only show it when user switch workspace.&lt;/li&gt;
&lt;li&gt;Make a hot corner for mouse user...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Auto hide the information bar can give user a clean and focus desktop but for some this is inconvenient. All of these problems can be solved through the last method.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;dynamic&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/11/#dynamic&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Dynamic&lt;/h2&gt;
&lt;p&gt;Show window&#39;s title attach to the window itself but with a twist:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In tabs workspace, the tab show additional information on the left and right side of the tabs bar make the tabs workspace look like one in the &lt;em&gt;Detach method&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;In busy workspace, additional information will keep being display on the same position on a bar.
&lt;ul&gt;
&lt;li&gt;The bar can automatically be transparent like how &lt;a href=&quot;https://elementary.io/&quot;&gt;Elementary OS&lt;/a&gt;&#39;s bar work.&lt;/li&gt;
&lt;li&gt;If the desktop have gaps equal or bigger than the bar, information bar can be blended into the gap-part.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Busy workspace&lt;/th&gt;
&lt;th&gt;Tabs workspace&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/43980777/108809479-82579e80-75db-11eb-94de-e3f790ce07e4.png&quot; alt=&quot;loveBusy&quot; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/43980777/108809480-82f03500-75db-11eb-9302-94b3ab8c127b.png&quot; alt=&quot;loveTab&quot; /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;pro-3&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/11/#pro-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Pro&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;This solved the information bar problem, additional information (workspaces and clock) will always be visible and still make the tabs workspace compact like the &lt;em&gt;Detach method&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;In a busy workspace, &amp;quot;if the desktop have gaps equal or bigger than the bar, information bar can be blended into the gap-part&amp;quot; which make the busy workspace as compact as in the &lt;em&gt;Attach method&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;con-3&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/11/#con-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Con&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Busy workspace&lt;/th&gt;
&lt;th&gt;Tabs workspace&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/43980777/108809476-81267180-75db-11eb-93d1-cb540b6fab66.png&quot; alt=&quot;hateBusy&quot; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/43980777/108809478-81bf0800-75db-11eb-946a-6dd00a3b11fd.png&quot; alt=&quot;hateTab&quot; /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;The title bar and information bar must be in the same direction to the window, if not (e.g: title bar attach to the top of the window but the information bar is on the bottom of the screen) the title will jump around when transition between busy workspace and tabs workspace. This will break the consistency of the desktop.&lt;/li&gt;
&lt;li&gt;If the desktop doesn&#39;t have gaps equal or bigger than the bar, the bar will be render fully in a busy workspace, and other than workspaces and clock, it display nothing... This bar took space on the desktop and used it inefficiency.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;fix-3&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/11/#fix-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Fix&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Just use that empty space on the information bar to display more stuffs (&lt;code&gt;CPU&lt;/code&gt;, &lt;code&gt;MEM&lt;/code&gt;, &lt;code&gt;DISK&lt;/code&gt;, &lt;code&gt;TEMP&lt;/code&gt;, &lt;code&gt;PLAYING&lt;/code&gt;...), then collapsed most of it to an arrow icon when switch to a tabs workspace.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/11/#conclusion&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Conclusion&lt;/h2&gt;
  &lt;div class=&quot;overflow-x-auto whitespace-nowrap&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Method&lt;/th&gt;
&lt;th&gt;Busy workspace&lt;/th&gt;
&lt;th&gt;Tabs workspace&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Legacy&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Cramped&lt;/td&gt;
&lt;td&gt;Cramped&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Detach&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Confuse&lt;/td&gt;
&lt;td&gt;Best&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Attach&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Good&lt;/td&gt;
&lt;td&gt;Okay&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Dynamic&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Good (best if have gaps)&lt;/td&gt;
&lt;td&gt;Best&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
  &lt;/div&gt;
</content>
  </entry>
  <entry>
    <title>Kera Desktop</title>
    <link href="https://nnb.codeberg.page/blog/en/posts/10/"/>
    <updated>2023-08-09T00:00:00Z</updated>
    <id>https://nnb.codeberg.page/blog/en/posts/10/</id>
    <content xml:lang="en" type="html">&lt;p&gt;In 2021, I wrote a wiki article on my dotfiles repo called: &lt;a href=&quot;https://github.com/NNBnh/dotfiles/wiki/wm&quot;&gt;Windows manager Utopia&lt;/a&gt;. TL;DR it&#39;s the idea of using a web browser as a windows Manager. In it, I explain its benefits and features and theory how it might work...&lt;/p&gt;
&lt;h2 id=&quot;the-project&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/10/#the-project&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; The project&lt;/h2&gt;
&lt;p&gt;Then one day I saw &lt;a href=&quot;https://www.reddit.com/r/unixporn/comments/14591h2/kera_desktop_forget_it_i_just_made_my_own_desktop&quot;&gt;this post on r/unixporn&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;[Kera Desktop] Forget it, I just made my own desktop environment&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/Ad1YsFW.webp&quot; alt=&quot;Kera Desktop&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://desktop.kerahq.com/&quot;&gt;Kera Desktop&lt;/a&gt; is an independence DE, not only that, it also based on web technology The more I read the website of the project, the more I see that it has many great features and ideas as I expected!&lt;/p&gt;
&lt;p&gt;I don&#39;t even have anything to add here because &lt;a href=&quot;https://desktop.kerahq.com/&quot;&gt;the project&#39;s website&lt;/a&gt; has already done a good job explaining it, I recommend everyone to visit their website right away!&lt;/p&gt;
&lt;h2 id=&quot;performance-skeptical&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/10/#performance-skeptical&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Performance skeptical&lt;/h2&gt;
&lt;p&gt;Many people when they hear &amp;quot;web-based&amp;quot; immediately doubt the project&#39;s performance, don&#39;t know if it will run on the Thinkpad with 0.5gb ram... I recommend you take a look at the &lt;a href=&quot;https://desktop.kerahq.com/faq&quot;&gt;project&#39;s FAQ&lt;/a&gt;. I guarantee it will answer most of your skeptical.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Image viewer/media player for minimalist</title>
    <link href="https://nnb.codeberg.page/blog/en/posts/9/"/>
    <updated>2023-08-07T00:00:00Z</updated>
    <id>https://nnb.codeberg.page/blog/en/posts/9/</id>
    <content xml:lang="en" type="html">&lt;p&gt;Here are my five stages of rice image viewer:&lt;/p&gt;
&lt;h2 id=&quot;1-normie&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/9/#1-normie&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; 1. Normie&lt;/h2&gt;
&lt;p&gt;These newbies have just installed Linux and use the default image viewer that comes with the DE. Since it already there, why not use it, right?&lt;/p&gt;
&lt;h2 id=&quot;2-beginner&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/9/#2-beginner&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; 2. Beginner&lt;/h2&gt;
&lt;p&gt;After installing Arch Linux (or Manjaro and pretending to use pure Arch) and setting up WM. The average r/unixporn enjoyer decided to install &lt;a href=&quot;https://github.com/muennich/sxiv&quot;&gt;SXIV&lt;/a&gt; after hearing that it was better than &lt;a href=&quot;https://feh.finalrewind.org/&quot;&gt;FEH&lt;/a&gt; from a Youtube video. But soon they realized that to configure SXIV, they had to edit the source code, and compile it themselves. Some continues to use it and adopts &lt;a href=&quot;https://suckless.org/philosophy&quot;&gt;the Suckless philosophy&lt;/a&gt;, others noticed the Suck**** inside of it and go on their journey to find a faster, lighter and easier to configure image viewer.&lt;/p&gt;
&lt;h2 id=&quot;3-minimalist&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/9/#3-minimalist&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; 3. Minimalist&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://mpv.io/&quot;&gt;MPV&lt;/a&gt; is a media player that is as powerful as VLC but extremely lightweight/minimal. It&#39;s also secretly a good image viewer, use &lt;a href=&quot;https://github.com/occivink/mpv-image-viewer&quot;&gt;MPV Image Viewer&lt;/a&gt; to turn MPV into a perfect image viewer.&lt;/p&gt;
&lt;p&gt;Of course if you only use MPV as then it&#39;s pretty bloat, but if you already used it as a media player then it&#39;s definitely lighter than having a dedicated image viewer (also who have an image viewer but not have a media player, right?). You can think of an image as a video, but it has no sound and only have one frame, so use the media player to view image still satisfies the UNIX philosophy &amp;quot;Programs that do one thing and do it well&amp;quot;.&lt;/p&gt;
&lt;h2 id=&quot;4-extreme-minimalist&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/9/#4-extreme-minimalist&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; 4. Extreme Minimalist&lt;/h2&gt;
&lt;p&gt;You can drag and drop media files into your web browser and it will play it. Realizing this, they quickly uninstall MPV and follow the path of suffering, path of extreme minimalism. There are a few formats it doesn&#39;t accept but it still be an acceptable solution... Or not, Using the browser can only view images in a very basic way, its experience is quite annoying. &amp;quot;Have I gone too far?&amp;quot;, &amp;quot;Is this too minimalistic?&amp;quot; they thought.&lt;/p&gt;
&lt;h2 id=&quot;5-lazy&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/9/#5-lazy&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; 5. Lazy&lt;/h2&gt;
&lt;p&gt;After rice Linux - minimalist style for a while, they start to get tired and have a different view of minimalism. They realize that using DE is very minimal in terms of time and effort. To be honest, DE is not that bloat, It has some features that although we don&#39;t always use, but having it is still very convenient in some situation. And if I don&#39;t install or configure anything but just use the default stuff from the DE, the dotfiles will be a lot more minimal!&lt;/p&gt;
&lt;p&gt;And so they decided to go back to installing DE and use the default image viewer that comes with the DE. Since it already there, why not use it, right?&lt;/p&gt;
&lt;h2 id=&quot;honorable-mention&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/9/#honorable-mention&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; 📢 Honorable Mention&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://imageglass.org/&quot;&gt;Image Glass&lt;/a&gt;: It&#39;s only run on Windows but it&#39;s is the best image viewer for Windows, it&#39;s well design with enough feature to even do some light modification but not too bloat.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>My graveyard of projects</title>
    <link href="https://nnb.codeberg.page/blog/en/posts/8/"/>
    <updated>2023-08-06T00:00:00Z</updated>
    <id>https://nnb.codeberg.page/blog/en/posts/8/</id>
    <content xml:lang="en" type="html">&lt;p&gt;List of projects I abandon. Some is finished, other left unfinished. But it&#39;s all pointless, or I don&#39;t feel it&#39;s useful to me anymore.&lt;/p&gt;
&lt;h2 id=&quot;utilities&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/8/#utilities&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Utilities&lt;/h2&gt;
&lt;h3 id=&quot;superb-bootstrap&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/8/#superb-bootstrap&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/NNBnh/superb-bootstrap&quot;&gt;Superb Bootstrap&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Description: SuperB Bootstrap is a bootstrap-system/dotfiles-manager framework that can be installed with just one command on a new *NIX system installation. Its flagship feature it that it can pick and install packages from available package managers and can even install more package managers if necessary.&lt;/li&gt;
&lt;li&gt;Abandon reason: Although convenient, it&#39;s too unreliable. Also &lt;a href=&quot;https://search.nixos.org/packages&quot;&gt;Nixpkgs&lt;/a&gt;, &lt;a href=&quot;https://brew.sh/&quot;&gt;Brew&lt;/a&gt; and &lt;a href=&quot;https://flatpak.org/&quot;&gt;Flatpak&lt;/a&gt; exist. Even better: New distros like &lt;a href=&quot;https://vanillaos.org/&quot;&gt;Vanilla OS&lt;/a&gt; and &lt;a href=&quot;https://blendos.co/&quot;&gt;Blend OS&lt;/a&gt; can even allow you to install packages from multiple package managers from different distro.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;coderun&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/8/#coderun&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/NNBnh/coderun&quot;&gt;Coderun&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Description: Code runner CLI that can run any languages. It recognizes the programming language from the file&#39;s extension and runs the file with the appropriate command.&lt;/li&gt;
&lt;li&gt;Abandon reason: You&#39;d rather run the file by typing the appropriate command into the shell, which is more flexible and not much slower.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;clipb-kak&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/8/#clipb-kak&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/NNBnh/clipb.kak&quot;&gt;Clipb.kak&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Description: Clipboard managers warper for Kakoune editor&lt;/li&gt;
&lt;li&gt;Abandon reason: Just install &lt;a href=&quot;https://getclipboard.app/&quot;&gt;Clipboard&lt;/a&gt; and add this to your &lt;code&gt;kakrc&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;hook -group &#39;clipboard&#39; global WinCreate .* %{ evaluate-commands %sh{ printf &#39;%s&#39; &#39;set-register dquote %sh{ cb }&#39; } }
hook -group &#39;clipboard&#39; global FocusIn   .* %{ evaluate-commands %sh{ printf &#39;%s&#39; &#39;set-register dquote %sh{ cb }&#39; } }
hook -group &#39;clipboard&#39; global RegisterModified &#92;&amp;quot; %{ nop %sh{ printf &#39;%s&#39; &amp;quot;$clipboard&amp;quot; | cb &amp;amp; } }
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;superb-mk&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/8/#superb-mk&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/NNBnh/mk&quot;&gt;SuperB MK&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Description: Its a files and folders creation tool inspired by &lt;a href=&quot;https://github.com/tanrax/terminal-AdvancedNewFile&quot;&gt;&lt;strong&gt;Advanced New File&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Abandon reason: I rarely find myself needing to create multiple folders and files with complex structure. If I need a template, I just init it&#39;s using a proper tool, or copy a template from some repo. Also, you can setup your text editor so that it automatically create parent directories if a file is opened on a path that does not exist (e.g: &lt;code&gt;mkparents&lt;/code&gt; options in Micro editor).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;superb-hr&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/8/#superb-hr&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/NNBnh/hr&quot;&gt;SuperB HR&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Description: Horizontal ruler for terminal.&lt;/li&gt;
&lt;li&gt;Abandon reason: This more of a shitpost than anything. Just put this into your shell config:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token for-or-select variable&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;${@&lt;span class=&quot;token operator&quot;&gt;:-&lt;/span&gt;─}&lt;/span&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token builtin class-name&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;&#92;033[?7l%*s&#92;033[?7h&#39;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;${&lt;span class=&quot;token environment constant&quot;&gt;COLUMNS&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:-&lt;/span&gt;$(tput cols)}&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;s/ /&lt;span class=&quot;token variable&quot;&gt;$text&lt;/span&gt;/g&quot;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;done&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;my-sed-script-collections&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/8/#my-sed-script-collections&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/NNBnh/sed-collections&quot;&gt;My Sed script collections&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Description: This is a collection of Sed scripts to help you filter text.&lt;/li&gt;
&lt;li&gt;Abandon reason: I never actually used it, I just made it for fun...&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;rice&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/8/#rice&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Rice&lt;/h2&gt;
&lt;h3 id=&quot;superb-st&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/8/#superb-st&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/NNBnh/superb-st&quot;&gt;SuperB ST&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Description: ST-base terminal with enough patches.&lt;/li&gt;
&lt;li&gt;Abandon reason: Even though it&#39;s fast and minimalist, it&#39;s quite janky and maintaining / building the binary myself is quite exhausting to me.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;superb-ui&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/8/#superb-ui&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/superb-ui&quot;&gt;SuperB UI&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Description: It&#39;s a UI and colors management method that export the colors hex through environment variables so any program that can read environment variables can use it.&lt;/li&gt;
&lt;li&gt;Abandon reason: That&#39;s a bad idea... Environment variables are very slow, unstable, some applications/cases hard to read it. Use &lt;a href=&quot;https://github.com/tinted-theming&quot;&gt;Tinted Theming&lt;/a&gt;, &lt;a href=&quot;https://github.com/deviantfero/wpgtk&quot;&gt;Wpgtk&lt;/a&gt; or &lt;a href=&quot;https://github.com/dylanaraps/pywal&quot;&gt;Pywal&lt;/a&gt; instead.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;diyship&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/8/#diyship&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/info-mono/diyship&quot;&gt;DIYship&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Description: DIYship is a cross-shell prompt framework that let you write your prompt with any programing language for any shell.&lt;/li&gt;
&lt;li&gt;Abandon reason: Except for creating a prompt that competes with &lt;a href=&quot;https://starship.rs/&quot;&gt;Starship&lt;/a&gt;, no souls need DIYship...&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;bmono&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/8/#bmono&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/NNBnh/bmono&quot;&gt;Bmono&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Description: My goal is to make a Iosevka font that fix the &lt;a href=&quot;https://github.com/be5invis/Iosevka/issues/1326&quot;&gt;ligatures on Kitty bug&lt;/a&gt; and come with some tiny tweak to make it slicker.&lt;/li&gt;
&lt;li&gt;Abandon reason: Now the &lt;a href=&quot;https://github.com/be5invis/Iosevka/pull/1403&quot;&gt;Kitty bug had been fixed&lt;/a&gt;, and you can tweak the font by using &lt;a href=&quot;https://github.com/be5invis/Iosevka/issues/1376&quot;&gt;stylistic sets/character variants&lt;/a&gt;, I no longer see the point of creating and maintaining a separate font.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;da-one&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/8/#da-one&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/NNBnh/da-one&quot;&gt;Da One&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Description: A color scheme that vibrant and distinct but still maintain a pleasant harmony. It&#39;s design to work with terminal, meaning all accents tone have normal and bright colors.&lt;/li&gt;
&lt;li&gt;Abandon reason: &lt;a href=&quot;https://github.com/catppuccin/catppuccin&quot;&gt;Catppuccin&lt;/a&gt; exist and it did exactly that but better. I saw Catppuccin when I was making Da One, I could just stop right away but I think I could make a better color scheme than Catppuccin (nope).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;other&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/8/#other&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Other&lt;/h2&gt;
&lt;h3 id=&quot;orange-markup-language&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/8/#orange-markup-language&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/NNBnh/orml&quot;&gt;Orange markup language&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Description: Orange markup language is an &amp;quot;original&amp;quot; markup language inspired by &lt;a href=&quot;https://pml-lang.dev/&quot;&gt;PML&lt;/a&gt;, design to replace both Markdown and HTML.&lt;/li&gt;
&lt;li&gt;Abandon reason: After a while I start to realize that maybe we don&#39;t need another markdown language anymore:
&lt;ul&gt;
&lt;li&gt;For developer, HTML is the best choice because HTML&#39;s tags syntax is very clear.&lt;/li&gt;
&lt;li&gt;For causal writing usage, Markdown and AsciiDoc is good enough.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Ruby and Me</title>
    <link href="https://nnb.codeberg.page/blog/en/posts/7/"/>
    <updated>2023-08-06T00:00:00Z</updated>
    <id>https://nnb.codeberg.page/blog/en/posts/7/</id>
    <content xml:lang="en" type="html">&lt;p&gt;Around February, after I posted &lt;a href=&quot;https://codeberg.org/NNB/dotfiles/releases/tag/v3.5.0&quot;&gt;rice v3.5.0&lt;/a&gt;, I promised to make a blog to explain how I use Ruby as a shell. Initially I want to explain it on an article, then it expanded into a website! Then a mountain of college work and internship job drop into my schedule... After all of that, I finally have time and energy to blogging again. So sorry and thank you everyone for waiting to follow my blog, I will try blogging more frequently!&lt;/p&gt;
&lt;p&gt;Back to Ruby. As mentioned, the website that I created is &lt;a href=&quot;https://nnb.codeberg.page/ruby-on-shell&quot;&gt;Ruby on Shell&lt;/a&gt; and you can read it right now. This blog post will focus on how I discovered the power of Ruby and the process by which I created Ruby on Shell.&lt;/p&gt;
&lt;h2 id=&quot;how-i-get-to-know-ruby&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/7/#how-i-get-to-know-ruby&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; How I get to know Ruby&lt;/h2&gt;
&lt;p&gt;I was a naive programmer back then, thinking that I should just master one programming language and use it for everything (and that language was Python, a very normie choice...). I used &lt;a href=&quot;https://xon.sh/&quot;&gt;Xonsh&lt;/a&gt; (in short, it is a fusion between Python and Bash) as my main shell for a while, its interactive experience is quite good but scripting on Xonsh is a bit annoying. Because of Python&#39;s off-side rule and list comprehension, it&#39;s hard for me to scripting as short as I&#39;d like.&lt;/p&gt;
&lt;p&gt;I want a full-fledged programming language like Python, Perl or Lua but with good scripting features like &lt;a href=&quot;https://www.nushell.sh/&quot;&gt;Nushell&lt;/a&gt; or &lt;a href=&quot;https://elv.sh/&quot;&gt;Elvish&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Then one day I saw this line on &lt;a href=&quot;http://xahlee.info/comp/list_comprehension.html&quot;&gt;an article by Xah Lee about list comprehension&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class=&quot;language-rb&quot;&gt;&lt;code class=&quot;language-rb&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;.9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;select&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;n&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; n&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;even&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;map&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;n&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;n&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that this is not list comprehension, because it does not use a special syntax. But it captures the &lt;code&gt;map(f, filter(list,predicate))&lt;/code&gt; in ruby style.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I&#39;ve seen Xah Lee mention Ruby a few times, but that&#39;s the first time I&#39;ve read a Ruby code and understand what it does. Its syntax is very compact, I feel that I can script on this language easily. And I was correct, I&#39;ve dived into &lt;a href=&quot;https://nnb.codeberg.page/ruby-on-shell/#why-ruby&quot;&gt;why Ruby is a perfect choice for shell scripting in Ruby on Shell&lt;/a&gt; so I won&#39;t repeat it again.&lt;/p&gt;
&lt;p&gt;Here are my few thoughts on Ruby before moving on to the next section:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I have been peeking at Lua for a while now, I even found a shell similar to Xonsh but using Lua as the core (&lt;a href=&quot;https://rosettea.github.io/Hilbish&quot;&gt;Hilbish&lt;/a&gt;). But I don&#39;t really like Lua because even though it&#39;s fast, light, and simple... Its Syntax is still quite verbose and isn&#39;t easy to chain functions from left to right like Ruby or other shells.&lt;/li&gt;
&lt;li&gt;Currently, there is no language to easily run both Ruby and shell commands, so here is how I use Ruby in the terminal:
&lt;ul&gt;
&lt;li&gt;Use a POSIX shell as the main shell, and create a keybind in the shell to switch to Ruby for scripting.&lt;/li&gt;
&lt;li&gt;In Ruby there is a syntax to call shell commands easily (wrap the command with backticks) so just enjoy shell scripting.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;ruby-on-shell-how-it-s-made&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/7/#ruby-on-shell-how-it-s-made&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Ruby on Shell - How It&#39;s Made&lt;/h2&gt;
&lt;p&gt;Not difficult but very time consuming:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Make a list of standard CLI tools:&lt;/strong&gt; I found it from the POSIX documentation, the list of tools in Toybox, and a few other sources. Then put it all together and go through the list to see what should and shouldn&#39;t be on the list.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Find the alternative in Ruby:&lt;/strong&gt; Again go through everything on the list, find a similar function or library in Ruby and document it. Most of the time, I just need to add a link to an API, but some have to write a more detail instructions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Build a proper website:&lt;/strong&gt; Although this is the &lt;em&gt;hardest&lt;/em&gt; part of the project, it only took me less than a week to finish the frontend... And about two weeks to writing the introduction.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It was hard work, but it was worth it in the end. The process helped me increase my understanding of Ruby, plus now I have a pretty useful cheat-sheet.&lt;/p&gt;
&lt;h2 id=&quot;the-future&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/7/#the-future&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; The Future&lt;/h2&gt;
&lt;p&gt;I&#39;m currently working on a project called &lt;a href=&quot;https://codeberg.org/NNB/shell-on-ruby&quot;&gt;Shell on Ruby&lt;/a&gt; to make scripting and using shell commands on Ruby more convenient.&lt;/p&gt;
&lt;p&gt;I&#39;m also occasionally peeking &lt;a href=&quot;https://crystal-lang.org/&quot;&gt;Crystal&lt;/a&gt;, its syntax is ~90% similar to Ruby but faster and has some better design than Ruby, but scripting on it isn&#39;t as convenient.&lt;/p&gt;
&lt;p&gt;And that&#39;s all, I will continue my adventure on making a perfect scripting environment. See you in the next blogs.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Tabs vs Apps</title>
    <link href="https://nnb.codeberg.page/blog/en/posts/6/"/>
    <updated>2023-02-13T00:00:00Z</updated>
    <id>https://nnb.codeberg.page/blog/en/posts/6/</id>
    <content xml:lang="en" type="html">&lt;p&gt;If you want to access a platform like YouTube, Facebook, Discord, Messenger... and it requires an internet connection to access it, 95% of you don&#39;t need to download its app, just use it directly through the browser. Whether on a desktop or a mobile.&lt;/p&gt;
&lt;h2 id=&quot;why-not-apps&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/6/#why-not-apps&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Why not apps?&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;It&#39;s bloat.&lt;/li&gt;
&lt;li&gt;App will have more access to user&#39;s personal data.&lt;/li&gt;
&lt;li&gt;You cannot open multiple tabs at the same time.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;it-s-browser-tabs-good-enough&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/6/#it-s-browser-tabs-good-enough&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; It&#39;s browser tabs good enough?&lt;/h2&gt;
&lt;p&gt;Yes, very good, in fact!&lt;/p&gt;
&lt;h3 id=&quot;on-desktop&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/6/#on-desktop&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; On Desktop&lt;/h3&gt;
&lt;p&gt;Most of us have been using web browsers to surf social media sites on the desktop. However, the same cannot be said for communication apps like Discord and Messenger. With these applications, people tend to download its own app because they think that they have to do so to use features such as notifications, toggle the mic when voice-call. But do you know that you can get these features even when using it on the web:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All popular chat applications have a feature to show notifications on the web, but some (like Discord) don&#39;t show notifications by default, you just need to go to settings and enable it.&lt;/li&gt;
&lt;li&gt;Speaking of Discord, you can also toggle the mic with keyboard shortcuts like you use on Discord without downloading it: (&lt;a href=&quot;https://superuser.com/questions/55598/super-key-to-pause-mute-mic-and-mute-speakers-in-windows&quot;&gt;Guide for setting up mic shortcuts on Windows with AutoHotKey&lt;/a&gt;, &lt;a href=&quot;https://askubuntu.com/questions/12100/command-to-mute-and-unmute-a-microphone&quot;&gt;Guide for doing the same on Linux&lt;/a&gt;). That way you can toggle the mic when used with any app, for the whole system.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;on-mobile&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/6/#on-mobile&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; On mobile&lt;/h3&gt;
&lt;p&gt;Before 2014, most social medias website is unusable on mobile web browsers, often too laggy, and the interface are terrible compared to the apps. But over time, phones are now much faster now and websites have also significantly improved on browsers. Now day, accessing these platforms on a browser is even better than using apps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you use Brave or Firefox with &lt;a href=&quot;https://ublockorigin.com/&quot;&gt;uBlock Origin&lt;/a&gt;, you have ad-blocker!&lt;/li&gt;
&lt;li&gt;You can leave YouTube playing on background.&lt;/li&gt;
&lt;li&gt;Opening links to other websites is more convenient than switching back and forth between the app and the browser.&lt;/li&gt;
&lt;li&gt;You can bookmark any websites and use a unified bookmark manager instead of using the save feature to save posts scattered in each social medias.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Minimalist window manager&#39;s jobs</title>
    <link href="https://nnb.codeberg.page/blog/en/posts/5/"/>
    <updated>2023-02-11T00:00:00Z</updated>
    <id>https://nnb.codeberg.page/blog/en/posts/5/</id>
    <content xml:lang="en" type="html">&lt;p&gt;This is a follow-up to &lt;a href=&quot;https://nnb.codeberg.page/blog/en/posts/4&quot;&gt;&amp;quot;Things to note when design a minimal CLI utility&amp;quot;&lt;/a&gt;, but this time it&#39;s about window manager.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/43980777/134518773-1862d6a4-3dea-4af7-a3aa-71cc79b91c71.png&quot; alt=&quot;Pixel Art&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;configuration&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/5/#configuration&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Configuration&lt;/h2&gt;
&lt;p&gt;I have covered this in detail on &lt;a href=&quot;https://nnb.codeberg.page/blog/en/posts/4&quot;&gt;my previous blog&lt;/a&gt;, it just also applies to WM.&lt;/p&gt;
&lt;h2 id=&quot;widgets&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/5/#widgets&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Widgets&lt;/h2&gt;
&lt;p&gt;Widgets like bar, menu don&#39;t need and shouldn&#39;t be built-in to the windows manager. Because there is already tools out there that handle these widgets far better
(&lt;a href=&quot;https://github.com/elkowar/eww&quot;&gt;EWW&lt;/a&gt;, &lt;a href=&quot;https://github.com/brndnmtthws/conky&quot;&gt;Conky&lt;/a&gt;, &lt;a href=&quot;https://wiki.archlinux.org/title/List_of_applications#Taskbars&quot;&gt;bars&lt;/a&gt;, &lt;a href=&quot;https://wiki.archlinux.org/title/List_of_applications#Application_launchers&quot;&gt;menus&lt;/a&gt;).
The exception is if the WM has a whole widget&#39;s system like &lt;a href=&quot;https://awesomewm.org/&quot;&gt;AwesomeWM&lt;/a&gt; that can be used to config everything from wallpaper to window decorations.&lt;/p&gt;
&lt;h2 id=&quot;wallpaper&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/5/#wallpaper&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Wallpaper&lt;/h2&gt;
&lt;p&gt;WM should not &lt;em&gt;go out of it&#39;s way&lt;/em&gt; to handle wallpaper, leave it to the &lt;a href=&quot;https://wiki.archlinux.org/title/List_of_applications/Other#Wallpaper_setters&quot;&gt;wallpaper setters&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;hotkeys&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/5/#hotkeys&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Hotkeys&lt;/h2&gt;
&lt;p&gt;The same go for hotkey, hotkey daemons exist!
(&lt;a href=&quot;https://github.com/baskerville/sxhkd&quot;&gt;SXHKD&lt;/a&gt;, &lt;a href=&quot;https://github.com/jtroo/kanata&quot;&gt;Kanata&lt;/a&gt;, &lt;a href=&quot;https://github.com/kmonad/kmonad&quot;&gt;KMonad&lt;/a&gt;).
The only exception are to config mouse buttons (with mod keys) to focus, move and resize windows.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Things to note when design a minimal CLI utility</title>
    <link href="https://nnb.codeberg.page/blog/en/posts/4/"/>
    <updated>2023-02-02T00:00:00Z</updated>
    <id>https://nnb.codeberg.page/blog/en/posts/4/</id>
    <content xml:lang="en" type="html">&lt;p&gt;&lt;a href=&quot;https://wikipedia.org/wiki/Unix_philosophy&quot;&gt;The UNIX philosophy&lt;/a&gt; is emphasized when it comes to designing CLI tools because it helps to tie together disparate tools into a unified TTY ecosystem. Each tool just &lt;em&gt;&amp;quot;Do one thing and do it well&amp;quot;&lt;/em&gt;, which makes it possible for all tools to be harmoniously connected with each other. However, I still see many old and new CLI tools that have some redundant features. These features are included with the intention of making the tool more convenient to use, but users can already achieve it by piping to existed tools relatively convenient. Redundant features in a CLI tool only make the tool more cumbersome.&lt;/p&gt;
&lt;h2 id=&quot;redirection&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/4/#redirection&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Redirection&lt;/h2&gt;
&lt;p&gt;If your tool works with strings and not specifically with files, it doesn&#39;t need flags to read files like &lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;--file&lt;/code&gt;, &lt;code&gt;-i&lt;/code&gt;, &lt;code&gt;--input&lt;/code&gt;... Because it&#39;s unnecessary and makes your tool a bit more complicated. You should instead allow your tool to read &lt;code&gt;stdin&lt;/code&gt;, this syntax can be used uniformly across tools and most shells have support for redirecting data from a file into tool:&lt;/p&gt;
&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;tool &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; input.txt&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;cat&lt;/span&gt; input.txt &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; tool&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;cat&lt;/span&gt; input1.txt input2.txt &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; tool&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Similar to reading files, most shells have support for redirecting output to files:&lt;/p&gt;
&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;tool &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; output.txt&lt;br /&gt;tool &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; output.txt&lt;br /&gt;tool &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;tee&lt;/span&gt; output1.txt output2.txt&lt;br /&gt;tool &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; input.txt &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; output.txt&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;clipboard&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/4/#clipboard&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Clipboard&lt;/h2&gt;
&lt;p&gt;Your CLI tool should not have the features to get or set to the clipboard because people will use your tool in all kinds of environments, and you can&#39;t support every clipboard manager out there. But if users want your tool to interact with the clipboard, they&#39;ll be more likely to pipe it to the clipboard manager they&#39;re using:&lt;/p&gt;
&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;cb &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; tool&lt;br /&gt;tool &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; cb&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;configuration&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/4/#configuration&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Configuration&lt;/h2&gt;
&lt;p&gt;Don&#39;t invent a new format or new language just to config your tool:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If the config file only stores values, use JSON, TOML, YAML or even &lt;a href=&quot;https://kdl.dev/&quot;&gt;KDL&lt;/a&gt;. INI is fine, but it has some limitations and is not implement consistently. Using a common format is of course better for both developers and users. Dotfiles management tools like Home Manager can also work with these formats easier.&lt;/li&gt;
&lt;li&gt;If it needs scripting, create a CLI interface so any language can call it. Or create a library / API for Lua, Python, Ruby... Don&#39;t create a dedicate programming language just to config your tool because that language will most likely limited, janky and just never be as good or as flexible as some proper languages.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;colored-outputs&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/4/#colored-outputs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Colored outputs&lt;/h2&gt;
&lt;p&gt;If your tool supports color rendering, please use &lt;a href=&quot;https://wikipedia.org/wiki/ANSI_escape_code&quot;&gt;3-bit and 4-bit color&lt;/a&gt; as the default! I know TTY&#39;s default color isn&#39;t pleasant, but most terminal users use themes, and when they use themes they want all programs to display with the colors in the theme, not a bunch of random colors. A lot of CLI tools out there that don&#39;t follow this and choose to use Monokai, Gruvbox or their own (often really odd) colors!&lt;/p&gt;
&lt;h2 id=&quot;further-readings&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/4/#further-readings&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Further readings&lt;/h2&gt;
&lt;p&gt;I highly recommend everyone to read &lt;a href=&quot;https://clig.dev/&quot;&gt;Command Line Interface Guidelines&lt;/a&gt;, the article is not only have a guide but also gives philosophy when designing CLI.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Pick a web browser</title>
    <link href="https://nnb.codeberg.page/blog/en/posts/3/"/>
    <updated>2023-01-30T00:00:00Z</updated>
    <id>https://nnb.codeberg.page/blog/en/posts/3/</id>
    <content xml:lang="en" type="html">&lt;h2 id=&quot;it-s-time-to-ditch-chrome&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/3/#it-s-time-to-ditch-chrome&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; It&#39;s time to ditch Chrome&lt;/h2&gt;
&lt;p&gt;Chrome is currently the most popular browser, but that doesn&#39;t mean it&#39;s the best. It used to be the best, but now there are many of other browsers that are better in every way, from features to security (Chrome collects a lot of user data!).&lt;/p&gt;
&lt;p&gt;If you are using Windows, using Edge is better than Chrome because Edge is also a Chromium-based browser, and it comes pre-installed anyway. Although, I wouldn&#39;t recommend using Edge because there are so many better options like:&lt;/p&gt;
&lt;h2 id=&quot;firefox&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/3/#firefox&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://www.mozilla.org/firefox/new&quot;&gt;Firefox&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/8HtSanJ.webp&quot; alt=&quot;Firefox&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.privacyguides.org/desktop-browsers/#firefox&quot;&gt;Firefox is the best privacy and security desktop browser&lt;/a&gt; &lt;a href=&quot;https://www.privacyguides.org/desktop-browsers/#recommended-configuration&quot;&gt;(but you can harden it more)&lt;/a&gt;. Not only that, it also has the best &lt;a href=&quot;https://youtu.be/a-V8GFtwjos&quot;&gt;dev-tools&lt;/a&gt;, anyone who does web-dev should also use Firefox.&lt;/p&gt;
&lt;p&gt;Firefox is also the best in terms of customization:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unlike most Chromium-based browsers, Firefox allows you to change the position of toolbar buttons.&lt;/li&gt;
&lt;li&gt;You can easily create themes with &lt;a href=&quot;https://color.firefox.com/&quot;&gt;Firefox Color&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you want to change more advanced stuff, you can &lt;a href=&quot;https://www.reddit.com/r/firefox/wiki/userchrome&quot;&gt;customize Firefox with CSS&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Or use one of &lt;a href=&quot;https://github.com/topics/userchrome&quot;&gt;the beautiful themes developed by the community&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;a href=&quot;https://github.com/akshat46/FlyingFox&quot;&gt;
  &lt;figure&gt;
    &lt;img class=&quot;w-full&quot; src=&quot;https://raw.githubusercontent.com/akshat46/FlyingFox/master/img/demo-hover.gif&quot; alt=&quot;FlyingFox&quot; /&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;FlyingFox&lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/Etesam913/slick-fox&quot;&gt;
  &lt;figure&gt;
    &lt;img class=&quot;w-full&quot; src=&quot;https://i.imgur.com/h4DxrhC.gif&quot; alt=&quot;Slick-Fox&quot; /&gt;
    &lt;figcaption class=&quot;text-center&quot;&gt;Slick-Fox&lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/a&gt;
&lt;h2 id=&quot;some-chromium-based-alternatives&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/3/#some-chromium-based-alternatives&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Some Chromium-based alternatives&lt;/h2&gt;
&lt;p&gt;Firefox is the best in many ways, but it&#39;s not a Chromium-based browser. This can be seen as a good thing because it breaks the monopoly that Chrome and Google hold in the web browser market. But some still need to use Chromium-based browser for a variety of reasons.&lt;/p&gt;
&lt;h3 id=&quot;brave&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/3/#brave&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://brave.com/&quot;&gt;Brave&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/ba0rBQ6.webp&quot; alt=&quot;Firefox&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Brave is &lt;a href=&quot;https://www.privacyguides.org/desktop-browsers/#brave&quot;&gt;second in terms of privacy and security&lt;/a&gt;, but its default setting is the most secure (it has a built-in ad-blocker), which is great for those who want security without the hassle of setting up.&lt;/p&gt;
&lt;p&gt;Unlike Firefox on mobile, Brave on mobile is also very secure, using the same browser on all platforms is also very convenient for data synchronization, open tabs, etc.&lt;/p&gt;
&lt;h3 id=&quot;vivaldi&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/3/#vivaldi&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://vivaldi.com/&quot;&gt;Vivaldi&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/Qs9lalF.webp&quot; alt=&quot;Vivaldi&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Although it&#39;s not very private and secure, Vivaldi is the most feature-rich browser (kitchen-sink included!). It has calendar, email, contacts, split screen feature... Vivaldi is also very easy to customize, although it is not as advanced as Firefox CSS, it has a lot of customizations available out of the box.&lt;/p&gt;
&lt;p&gt;At first, I quite liked it. But later on, I found it cumbersome. And although it is pretty customizable, I still do not find it as satisfying as to customize Firefox.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Become a Hackerman</title>
    <link href="https://nnb.codeberg.page/blog/en/posts/2/"/>
    <updated>2023-01-24T00:00:00Z</updated>
    <id>https://nnb.codeberg.page/blog/en/posts/2/</id>
    <content xml:lang="en" type="html">&lt;p&gt;As a programmer, you need to master a lot of skills, one of which is to look cool. Here are some TTY tools that can help turn you into a &lt;em&gt;Hackerman&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&quot;cool-retro-term&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/2/#cool-retro-term&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/Swordfish90/cool-retro-term&quot;&gt;Cool Retro Term&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;cool-retro-term is a terminal emulator which mimics the look and feel of the old cathode tube screens. It has been designed to be eye-candy, customizable, and reasonably lightweight.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;sm:hidden&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/121322/32070717-16708784-ba42-11e7-8572-a8fcc10d7f7d.gif&quot; alt=&quot;Default Amber Cool Retro Term&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/121322/32070715-163a1c94-ba42-11e7-80bb-41fbf10fc634.gif&quot; alt=&quot;Default Green Cool Retro &amp;gt; Term&quot; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;hidden sm:block&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&amp;gt; Default Amber&lt;/th&gt;
&lt;th&gt;$ Default Green&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/121322/32070717-16708784-ba42-11e7-8572-a8fcc10d7f7d.gif&quot; alt=&quot;Default Amber Cool Retro Term&quot; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/121322/32070715-163a1c94-ba42-11e7-80bb-41fbf10fc634.gif&quot; alt=&quot;Default Green Cool Retro &amp;gt; Term&quot; /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h2 id=&quot;edex-ui&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/2/#edex-ui&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/GitSquared/edex-ui&quot;&gt;eDEX-UI&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;A cross-platform, customizable science fiction terminal emulator with advanced monitoring &amp;amp; touchscreen support.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/media/screenshot_default.png&quot; alt=&quot;eDEX-UI&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;tdfgo&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/2/#tdfgo&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/digitallyserviced/tdfgo&quot;&gt;Tdfgo&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/TheDraw&quot;&gt;TheDraw&lt;/a&gt; font parser and console text renderer.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/digitallyserviced/tdfgo/main/assets/tdfgocast.gif&quot; alt=&quot;Tdfgocast&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/digitallyserviced/tdfgo/main/assets/tdfgo-print-user.png&quot; alt=&quot;Tdfgo print user&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Some alternative:
&lt;a href=&quot;http://www.figlet.org/&quot;&gt;FIGlet&lt;/a&gt;, &lt;a href=&quot;http://caca.zoy.org/wiki/toilet&quot;&gt;TOIlet&lt;/a&gt;
with
&lt;a href=&quot;https://github.com/xero/figlet-fonts&quot;&gt;Xero&#39;s fonts collection&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;btop&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/2/#btop&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/aristocratos/btop&quot;&gt;Btop&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Resource monitor that shows usage and stats for processor, memory, disks, network and processes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/eDvgKsI.webp&quot; alt=&quot;Btop&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;unimatrix&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/2/#unimatrix&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/will8211/unimatrix&quot;&gt;Unimatrix&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Python script to simulate the display from &amp;quot;The Matrix&amp;quot; in terminal.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/BHeqwCQ.webp&quot; alt=&quot;Unimatrix&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Some alternative:
&lt;a href=&quot;https://github.com/abishekvashok/cmatrix&quot;&gt;Cmatrix&lt;/a&gt;, &lt;a href=&quot;https://github.com/st3w/neo&quot;&gt;Neo&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;no-more-secrets&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/2/#no-more-secrets&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/bartobri/no-more-secrets&quot;&gt;No more secrets&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;This project provides a command line tool called &lt;code&gt;nms&lt;/code&gt; that recreates the famous data decryption effect seen on screen in the 1992 hacker movie Sneakers. For reference, you can see this effect at 0:35 in &lt;a href=&quot;https://youtu.be/F5bAa6gFvLs?t=35&quot;&gt;this movie clip&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://www.brianbarto.info/static/nms/nms.gif&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Also included in this project is a program called &lt;code&gt;sneakers&lt;/code&gt; that recreates what we see in the above movie clip.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://www.brianbarto.info/static/nms/sneakers.gif&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;genact&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/2/#genact&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/svenstaro/genact&quot;&gt;Genact&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Pretend to be busy or waiting for your computer when you should actually be doing real work! Impress people with your insane multitasking skills. Just open a few instances of &lt;code&gt;genact&lt;/code&gt; and watch the show. &lt;code&gt;genact&lt;/code&gt; has multiple scenes that pretend to be doing something exciting or useful when in reality nothing is happening at all.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/svenstaro/genact/master/gifs/cc.gif&quot; alt=&quot;CC&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/svenstaro/genact/master/gifs/memdump.gif&quot; alt=&quot;Memdump&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/svenstaro/genact/master/gifs/cargo.gif&quot; alt=&quot;Cargo&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;awesome-console-services&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/2/#awesome-console-services&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/chubin/awesome-console-services&quot;&gt;Awesome console services&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;A curated list of awesome console services (reachable via HTTP, HTTPS and other network protocols).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Notables are:&lt;/p&gt;
&lt;h3 id=&quot;mapscii&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/2/#mapscii&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/rastapasta/mapscii&quot;&gt;MapSCII&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;MapSCII is a Braille &amp;amp; ASCII world map renderer for your console.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;script id=&quot;asciicast-117813&quot; src=&quot;https://asciinema.org/a/117813.js&quot; async=&quot;&quot;&gt;&lt;/script&gt;
&lt;p&gt;Try it out:&lt;/p&gt;
&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;telnet mapscii.me&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;rickrollrc&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/2/#rickrollrc&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; &lt;a href=&quot;https://github.com/keroserene/rickrollrc&quot;&gt;Rickrollrc&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Bash script which &lt;a href=&quot;http://en.wikipedia.org/wiki/Rickrolling&quot;&gt;rickrolls&lt;/a&gt; your terminal by playing Rick Astley’s “Never Gonna Give You Up”.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/yDLaZna.png&quot; alt=&quot;rickroll in mac&quot; /&gt;&lt;/p&gt;
&lt;p&gt;To start rickrollin’ immediately:&lt;/p&gt;
&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;&lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-sL&lt;/span&gt; https://raw.githubusercontent.com/keroserene/rickrollrc/master/roll.sh &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;bash&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is the clandestine command you can give to your friends 😈:&lt;/p&gt;
&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;&lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-sL&lt;/span&gt; http://bit.ly/10hA8iC &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;bash&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Setting from TTY</title>
    <link href="https://nnb.codeberg.page/blog/en/posts/1/"/>
    <updated>2023-01-23T00:00:00Z</updated>
    <id>https://nnb.codeberg.page/blog/en/posts/1/</id>
    <content xml:lang="en" type="html">&lt;p&gt;This is just a small list of guides on system configuration from the command line instead of the bloated config app that come with the desktop environment.&lt;/p&gt;
&lt;h2 id=&quot;system&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/1/#system&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; 🖥️ System&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.org/title/Users_and_groups&quot;&gt;Users&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.org/title/System_time&quot;&gt;Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.org/title/Locale&quot;&gt;Locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.org/title/Power_management&quot;&gt;Power&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.org/title/Partitioning&quot;&gt;Partition&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;connect&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/1/#connect&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; 📶 Connect&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.org/title/NetworkManager&quot;&gt;Wifi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.org/title/Network_configuration&quot;&gt;Network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.org/title/Bluetooth&quot;&gt;Bluetooth&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;devices&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/1/#devices&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; 🖱️ Devices&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://cheat.sh/pactl&quot;&gt;Sound&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.org/title/Category:Keyboard_configuration&quot;&gt;Keyboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.org/title/Category:Mice&quot;&gt;Mouse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.org/title/Touchpad_Synaptics&quot;&gt;Touchpad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.org/title/Wacom_tablet&quot;&gt;Tablet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.org/title/Touchscreen&quot;&gt;Touchscreen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.org/title/Xrandr&quot;&gt;Display&lt;/a&gt; (&lt;a href=&quot;https://sr.ht/~emersion/wlr-randr&quot;&gt;for Wayland&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>*First post!</title>
    <link href="https://nnb.codeberg.page/blog/en/posts/0/"/>
    <updated>2023-01-22T00:00:00Z</updated>
    <id>https://nnb.codeberg.page/blog/en/posts/0/</id>
    <content xml:lang="en" type="html">&lt;h2 id=&quot;hello-world&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/0/#hello-world&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Hello, World!&lt;/h2&gt;
&lt;p&gt;Welcome to my blog! This isn&#39;t really my first time blogging, I&#39;ve written some articles on my &lt;a href=&quot;https://github.com/NNBnh/dotfiles/wiki&quot;&gt;Đotfiles&lt;/a&gt;&#39;s wiki before, but NNBlog is a fresh start. In the coming month, I will copy most articles from the Dotfiles to this site.&lt;/p&gt;
&lt;h2 id=&quot;the-technical&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/0/#the-technical&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; The technical&lt;/h2&gt;
&lt;p&gt;Before that, I wanted to show off a little bit about the technical side of this site. This is a static website generated using &lt;a href=&quot;https://www.11ty.dev/&quot;&gt;11ty (Eleventy)&lt;/a&gt;. 11ty is a light, simple and convenient JS framework. Its most important feature is that it allows the us to write the page in &lt;a href=&quot;https://wikipedia.org/wiki/Markdown&quot;&gt;Markdown&lt;/a&gt;. Not only that, it also has many features such as creating a table of contents, tag manager... This is quite ideal for a tinker like me.&lt;/p&gt;
&lt;p&gt;I also use &lt;a href=&quot;https://daisyui.com/&quot;&gt;DaisyUI&lt;/a&gt; for styling and &lt;a href=&quot;https://alpinejs.dev/&quot;&gt;Alpine.js&lt;/a&gt; for a bit of interactive. Although, Alpine.js is a bit overkill at the moment (the only thing that needs it is an image hover effect on the homepage):&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/KZ93WrH.webp&quot; alt=&quot;Hover effect&quot; /&gt;&lt;/p&gt;
&lt;p&gt;But in the future I can give a small interactive parts in some articles.&lt;/p&gt;
&lt;h2 id=&quot;support-multi-language&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;link-mono&quot; href=&quot;https://nnb.codeberg.page/blog/en/posts/0/#support-multi-language&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt; Support multi-language&lt;/h2&gt;
&lt;p&gt;Before, I only wrote in English because I wrote it on Github Wiki. But as you can see in the right corner of the Navbar there is a button to change to Vietnamese, I had blog in both English and Vietnamese! From now on, I will write in my native language first, then translate it to English. I&#39;m quite confident about my English listening/reading skill, but I&#39;m still a writing newbie, so &lt;a href=&quot;https://languagetool.org/&quot;&gt;LanguageTool&lt;/a&gt; (an open source grammar checker) has become an indispensable tool for me.&lt;/p&gt;
&lt;p&gt;The common way to support multi-language in 11ty is to split it into two directories &lt;code&gt;en/&lt;/code&gt; and &lt;code&gt;vi/&lt;/code&gt;, the same post has separate files of each language on each directory. That method is fine, but I want more flexibility in managing and reusing the elements of the article. So I let 11ty paginate each Markdown file into two pages in English (with &lt;code&gt;lang = &#39;en&#39;&lt;/code&gt;) and Vietnamese (with &lt;code&gt;lang = &#39;vi&#39;&lt;/code&gt;) so I can write in a single file like this:&lt;/p&gt;
&lt;pre class=&quot;language-liquid&quot;&gt;&lt;code class=&quot;language-liquid&quot;&gt;---&lt;br /&gt;title:&lt;br /&gt;  en: &quot;*First post!&quot;&lt;br /&gt;  vi: Blog post &quot;đầu tiên&quot;!&lt;br /&gt;description:&lt;br /&gt;  en: Made with 11ty&lt;br /&gt;  vi: Khai bút đầu năm bằng 11ty&lt;br /&gt;tags:&lt;br /&gt;  - update&lt;br /&gt;  - web_dev&lt;br /&gt;date: 2023-01-22&lt;br /&gt;image: https://images.unsplash.com/photo-1674240660273-a3496c4604fd&lt;br /&gt;---&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token liquid language-liquid&quot;&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; lang &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;vi&#39;&lt;/span&gt; &lt;span class=&quot;token delimiter punctuation&quot;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  Xin chào!&lt;br /&gt;&lt;span class=&quot;token liquid language-liquid&quot;&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token delimiter punctuation&quot;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  Hello!&lt;br /&gt;&lt;span class=&quot;token liquid language-liquid&quot;&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;token delimiter punctuation&quot;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That&#39;s all folks, I hope you all look forward to reading my next blog posts, bye!&lt;/p&gt;
</content>
  </entry>
</feed>
